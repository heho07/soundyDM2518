{"version":3,"sources":["utils.js","Login.js","CreateUser.js","Loading.js","Components/ImageSoundPlayer.jsx","Containers/Feed.jsx","Containers/Profile.jsx","Containers/ErrorPopUp.jsx","Containers/Upload.jsx","secrets.js","Containers/TabContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["redirectWhenOAuthChanges","history","firebase","onAuthStateChanged","user","push","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInWithGoogle","signInWithPopup","then","result","token","credential","accessToken","console","log","catch","error","errorCode","code","errorMessage","message","email","createErrorMessage","signInWithFacebook","loginClicked","_this$state","state","password","signInWithEmailAndPassword","errorMsg","react_default","a","createElement","react_onsenui","className","_this2","renderToolbar","onSubmit","event","preventDefault","value","onChange","setState","target","type","modifier","float","placeholder","style","width","onClick","visibility","height","icon","href","Component","CreateUser","createClick","displayName","createUserWithEmailAndPassword","userCredentials","updateProfile","Start","ImageSoundPlayer","soundClick","playing","refToSound","pause","play","item","img","imgUrl","key","time","src","photoURL","userName","alt","opacity","ref","x","onWaiting","handleAudioWaiting","url","title","keyword","lib_default","date","Date","Feed","foo","done","fetchAllSounds","onLoad","bind","pullHookState","size","spin","display","spinner","items","allSounds","map","element","i","Components_ImageSoundPlayer","id","react_infinite_scroller_default","pageStart","loadMore","loadItems","initialLoad","hasMore","loader","useWindow","page","fetchAdditionalSounds","renderPullHook","renderInfiniteScroller","Profile","signOut","upload","currentUser","storageRef","child","file","document","querySelector","files","uploadText","name","uid","metadata","contentType","put","snapshot","getDownloadURL","test","image","checkmark","selectText","selectButtonContent","firebaseAuthListener","storage","db","_this3","_this4","renderProfileImage","requried","editProfileName","accept","htmlFor","ErrorPopUp","isOpen","onCancel","cancelable","toRet","renderAlertDialog","renderToast","toReturn","showError","Upload","componentDidMount","startRecording","record","startTimer","stopRecording","stopTimer","uploadRecording","audioBlob","validUserInput","uploading","timeStamp","soundRef","updateImagesFromUnsplash","downloadURL","collection","add","blobURL","isRecording","isPaused","onStop","assertThisInitialized","timer","setInterval","setTimeout","clearInterval","recordedBlob","blob","length","match","recordButton","_this$state2","audioURL","color","es","onData","strokeColor","backgroundColor","class","rc_progress_es","percent","strokeWidth","controls","secrets","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","unsplashApiKeys","access_key","secret_key","TabContainer","asyncToGenerator","regenerator_default","mark","_callee","usersFromDatabase","wrap","_context","prev","next","navigator","onLine","fetchAllUsers","sent","orderBy","limit","get","querySnapshot","forEach","doc","soundData","data","correctUser","find","status","lastKnownKey","t0","stop","_callee2","_context2","startAt","getAllUsers","users","err","unsplash","Unsplash","require","default","applicationId","secret","httpsCallable","index","posts","postedBy","keyWord","search","photos","unsplashResult","toJson","results","urls","thumb","_context3","feedPage","paddingTop","Containers_Feed","msg","onPreChange","_ref3","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","content","tab","label","Containers_Upload","Containers_Profile","App","errorOccured","errorMessageType","window","addEventListener","e","react_router","path","exact","component","Loading","render","src_Login","assign","cancelErrorMessage","src_CreateUser","Containers_TabContainer","Containers_ErrorPopUp","Boolean","location","hostname","ReactDOM","react_router_dom","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38725425.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport const redirectWhenOAuthChanges = history => {\n  firebase.auth().onAuthStateChanged(user => {\n    history.push(user ? \"/TabContainer\" : \"/login\");\n  });\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { redirectWhenOAuthChanges } from \"./utils\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport * as Ons from \"react-onsenui\";\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { email: \"\", password: \"\" };\n  }\n\n  componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history)\n  }\n\n  signInWithGoogle = () => {\n    firebase\n      .auth()\n      .signInWithPopup(googleProvider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(\"Signed in with google!\");\n        console.log(token);\n        console.log(user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Google-sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  signInWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(facebookProvider)\n      .then(function(result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(\"Signed in with Facebook!\");\n        console.log(token);\n        console.log(user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Facebook sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  loginClicked = () => {\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        console.log(this.state.email);\n        let errorMsg = (\"Error logging in! \" + error.code + \" \" + error.message);\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n      });\n  };\n\n  renderToolbar() {\n    return (\n      <Ons.Toolbar>\n        <div className=\"center\">Welcome</div>\n      </Ons.Toolbar>\n    );\n  }\n\n  render() {\n    return (\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\n        <h1>Soundy</h1>\n          <form onSubmit = {(event) => {\n            event.preventDefault();\n            this.loginClicked();\n          }}>\n            <p>\n                <Ons.Input\n                  value={this.state.email}\n                  onChange={event => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  type=\"email\"\n                  modifier=\"underbar\"\n                  float\n                  placeholder=\"Email\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n              <p>\n                <Ons.Input\n                  value={this.state.password}\n                  onChange={event => {\n                    this.setState({ password: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  type=\"password\"\n                  float\n                  placeholder=\"Password\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n              <br />\n              <p>\n                <Ons.Button\n                  onClick={this.loginClicked}\n                  modifier=\"underbar\"\n                  style={{ width: \"60vw\" }}\n                >\n                  Log in\n                </Ons.Button>\n              </p>\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\n          </form>\n        <br />\n        <p>\n          <Ons.Button\n            className=\".fb-google-button\"\n            modifier=\"underbar\"\n            style={{ width: \"60vw\" }}\n            onClick={this.signInWithGoogle}\n          >\n            <Ons.Icon icon=\"google\" /> Sign in with Google\n          </Ons.Button>\n        </p>\n        <p>\n          <Ons.Button\n            className=\".fb-google-button\"\n            modifier=\"underbar\"\n            style={{ width: \"60vw\" }}\n            onClick={this.signInWithFacebook}\n          >\n            <Ons.Icon icon=\"facebook\" /> Sign in with Facebook\n          </Ons.Button>\n        </p>\n        <a href='javascript:;' onClick={() => {this.props.history.push('/create')}}>Don't have an account? Click here</a>\n\n      </Ons.Page>\n\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport * as Ons from \"react-onsenui\";\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { email: \"\", displayName: \"\",password: \"\" };\n  }\n\n  componentDidMount() {\n  }\n\n\n  signInWithGoogle = () => {\n    firebase\n      .auth()\n      .signInWithPopup(googleProvider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(\"Signed in with google!\");\n        console.log(token);\n        console.log(user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Google-sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  signInWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(facebookProvider)\n      .then(function(result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(\"Signed in with Facebook!\");\n        console.log(token);\n        console.log(user);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Facebook sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  createClick = () => {\n    const { email, displayName, password } = this.state;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        userCredentials.user.updateProfile({displayName: displayName})\n      })\n      .catch(error => {\n        console.log(this.state.email);\n        let errorMsg = (\"Error creating user! \" + error.code + \" \" + error.message);\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n      });\n  };\n\n  renderToolbar() {\n    return (\n      <Ons.Toolbar>\n        <div className=\"center\">Welcome</div>\n      </Ons.Toolbar>\n    );\n  }\n\n  render() {\n    return (\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\n        <h1>Soundy</h1>\n          <form onSubmit = {(event) => {\n            event.preventDefault();\n            this.loginClicked();\n          }}>\n            <p>\n                <Ons.Input\n                  value={this.state.email}\n                  onChange={event => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  type=\"email\"\n                  float\n                  placeholder=\"Email\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n              <p>\n                <Ons.Input\n                  value={this.state.displayName}\n                  onChange={event => {\n                    this.setState({ displayName: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  float\n                  placeholder=\"Display Name\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n              <p>\n                <Ons.Input\n                  value={this.state.password}\n                  onChange={event => {\n                    this.setState({ password: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  type=\"password\"\n                  float\n                  placeholder=\"Password\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n              <br />\n              \n              <p>\n                <Ons.Button\n                  onClick={this.createClick}\n                  modifier=\"underbar\"\n                  style={{ width: \"60vw\" }}\n                >\n                  Create Account\n                </Ons.Button>\n              </p>\n              <br />\n            <p>\n              <Ons.Button\n                className=\".fb-google-button\"\n                modifier=\"underbar\"\n                style={{ width: \"60vw\" }}\n                onClick={this.signInWithGoogle}\n              >\n                Create account with <Ons.Icon icon=\"google\" />\n              </Ons.Button>\n            </p>\n            <p>\n              <Ons.Button\n                className=\".fb-google-button\"\n                modifier=\"underbar\"\n                style={{ width: \"60vw\" }}\n                onClick={this.signInWithFacebook}\n              >\n                Create account with <Ons.Icon icon=\"facebook\" />\n              </Ons.Button>\n            </p>\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\n          </form>\n          <a href='javascript:;' onClick={() => {this.props.history.push('/login')}}>Already have an account? Click here</a>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default CreateUser;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { redirectWhenOAuthChanges } from \"./utils\";\n\nclass Start extends Component {\n  componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history);\n  }\n\n  render() {\n    return <div className=\"App\">Loading...</div>;\n  }\n}\n\nexport default Start;\n","import React, { Component } from \"react\";\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport TimeAgo from 'react-timeago'\nimport frenchStrings from 'react-timeago/lib/language-strings/fr'\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\n\nclass ImageSoundPlayer extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n    };\n    this.refToSound = {}\n  }\n\n \n\n  soundClick = () => {\n    if(!this.state.playing){\n      this.refToSound.play()\n      this.setState({playing: true})\n    } else {\n      this.refToSound.pause()\n      this.setState({playing: false})\n    }\n  }\n\n  // Each element to be shown in the feed\n  renderItem(item) {\n    \n  }\n\n  // Called if the audio player has to wait due to slow internet connection\n  handleAudioWaiting(){\n    this.props.createErrorMessage(\"Slow internet connection detected.\", \"Toast\");\n  }\n\n\n  render() {\n    const item = this.props.item\n    const {playing} = this.state\n    let img = item.imgUrl ? item.imgUrl : \"https://i.imgur.com/dBmYY4M.png\";    // old placeholder image \"https://i.imgur.com/hgyXyww.png\" \n    return (\n      <Ons.Card\n        key={item.time}>\n        <div>\n          <img src={item.photoURL} className=\"profile-image-feed img-circle\"/>\n          <b>{item.userName}</b>\n        </div>\n          <div className=\"imageButtonContainer\">\n            <img src = {img} style={{width: \"100%\"}} alt = \"placeholderText\"/>\n            <button\n              className=\"btn\"\n              style={{opacity: \"0.8\"}}\n              onClick={() => this.soundClick()}>\n              <ons-icon\n                icon = {playing ? \"pause\" : \"play\"}>\n              </ons-icon>\n            </button>\n          </div>\n          <audio\n            ref={(x) => {this.refToSound = x}}\n            onWaiting = {() => this.handleAudioWaiting()}>\n            <source src = {item.url}/>\n            <p>Your browser does not support audio. The file can be found at <a href = {item.url}>this link</a></p>  \n          </audio>     \n        <center>\n          <h4>{item.title} <i>#{item.keyword}</i></h4>\n        </center>\n        <p>\n          Posted <TimeAgo date={new Date(item.time)}/>\n        </p>\n      </Ons.Card>\n    );\n  }\n}\n      \nexport default ImageSoundPlayer;\n","import React, { Component } from \"react\";\nimport InfiniteScroll from 'react-infinite-scroller';\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nimport ImageSoundPlayer from \"../Components/ImageSoundPlayer\";\n\nclass Feed extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: true,\n    };\n  }\n\n  // called from PullHook when the action is performed\n  async onLoad(done) {\n    await this.props.fetchAllSounds();\n    // await setTimeout(() => done(), 3000);\n    // ^^^^ Kan användas för att testa hur olika laddningsalternativ ser ut.\n    done();\n  }\n\n  // Used to request a new database query\n  renderPullHook() {\n    return (\n      <Ons.PullHook\n        onChange={this.onChange}\n        onLoad={this.onLoad.bind(this)} // bind this (the Feed.jsx object) to be able to use its methods and attributes\n      >\n        {this.state.pullHookState === \"initial\" ? (\n          <span>\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-down-a\" />\n            Pull down to refresh\n          </span>\n        ) : this.state.pullHookState === \"preaction\" ? (\n          <span>\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-up-a\" />\n            Release to refresh\n          </span>\n        ) : (\n          <span>\n            <Ons.Icon\n              spin\n              icon=\"sync-alt\"\n              style={{ display: this.state.spinner }}\n            />\n          </span>\n        )}\n      </Ons.PullHook>\n    );\n  }\n\n  // https://www.npmjs.com/package/react-infinite-scroller\n  renderInfiniteScroller(){\n    let items = [];\n    this.props.allSounds.map((element, i) => {\n      items.push(<ImageSoundPlayer item={element} key={element.id} createErrorMessage={this.props.createErrorMessage}/>);\n    })\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={ this.loadItems.bind(this) } \n        initialLoad = { false }   // undviker att ladda när elementet först skapas iom att vi redan har data\n        hasMore={this.props.hasMore}\n        loader= {<div className=\"loader\" key={0}>Loading ...</div>}\n        // threshold = {1000}     // <---- om man vill sätta anpassad gräns för när den uppdaterar\n        useWindow = {false}       // <---- MUY IMPORTANTE, annars känner den inte av scrollen\n      >\n        <div>\n          {items}\n        </div> \n      </InfiniteScroll>\n    );\n  }\n\n  // The function called from infiniteScroller when new items are to be loaded\n  loadItems (page) {\n    console.log(\"Loading more items from the database\");\n    this.props.fetchAdditionalSounds();\n  }\n\n  render() {\n    return (\n      <Ons.Page>\n        {this.renderPullHook()}\n        {this.renderInfiniteScroller()}\n      </Ons.Page>\n    );\n  }\n}\n      \nexport default Feed;\n","import React, { Component } from \"react\";\n//import { redirectWhenOAuthChanges } from \"../utils\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass Profile extends Component {\n  // behövde skriva om koden med en konstruktor för att få tillgång till props\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      name: null,\n      photoURL: null,\n      image: \"\",\n      checkmark: \"none\",\n      spinner: \"none\",\n      selectText: \"inherent\",\n      uploadText: \"inherent\"\n    };\n  }\n\n  componentDidMount() {\n    this.firebaseAuthListener = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ currentUser: user });\n      }\n    });\n\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.storageRef = storage.ref();\n    this.db = firebase.firestore();\n  }\n\n  componentWillUnmount() {\n    this.firebaseAuthListener && this.firebaseAuthListener();\n  }\n\n  signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        console.log(\"Signed out completed\");\n      })\n      .catch(function(error) {\n        console.log(\"Error when signing out\" + error);\n        this.props.createErrorMessage(\n          \"Error when signing out. See log for more details\",\n          \"AlertDialog\"\n        );\n      });\n  };\n\n  renderProfileImage() {\n    const currentUser = this.state.currentUser; \n    if (currentUser && currentUser.photoURL === null) {\n      console.log(currentUser.userName);\n      return (\n        <img\n          src=\"https://t4.ftcdn.net/jpg/02/15/84/43/240_F_215844325_ttX9YiIIyeaR7Ne6EaLLjMAmy4GvPC69.jpg\"\n          alt=\"No Display Name\"\n          className=\"userPhoto\"\n        />\n      );\n    } else {\n      return (\n        <img\n          src={currentUser && currentUser.photoURL}\n          alt={currentUser && currentUser.displayName}\n          className=\"userPhoto\"\n        />\n      );\n    }\n  }\n\n  editProfileName() {\n    var user = firebase.auth().currentUser;\n    this.state.name !== null &&\n      user\n        .updateProfile({\n          displayName: this.state.name\n        })\n        .then(test => {\n          this.setState({ currentUser: user, name: null });\n        })\n        .catch(function(error) {\n          console.error(\"Error updating! \" + error.code + \" \" + error.message);\n          this.createErrorMessage(\n            \"Error editing profile. See log for more details\",\n            \"AlertDialog\"\n          );\n        });\n  }\n\n  upload = () => {\n    var user = firebase.auth().currentUser;\n    const ref = this.storageRef.child(\"profileImages\");\n    const file = document.querySelector(\"#photo\").files[0];\n    if (file) {\n      this.setState({ uploadText: \"none\", spinner: \"block\" });\n      const name = user.uid;\n      const metadata = {\n        contentType: file.type\n      };\n      const task = ref.child(name).put(file, metadata);\n      task\n        .then(snapshot => snapshot.ref.getDownloadURL())\n        .then(url => {\n          user\n            .updateProfile({\n              photoURL: url\n            })\n            .then(test => {\n              this.setState({\n                currentUser: user,\n                image: null,\n                checkmark: \"none\",\n                spinner: \"none\",\n                selectText: \"block\",\n                uploadText: \"block\"\n              });\n            })\n            .catch(function(error) {\n              // An error happened.\n              this.props.createErrorMessage(\n                \"Error uploading profile image.\",\n                \"AlertDialog\"\n              );\n            });\n        })\n        .catch(console.error);\n    }\n  };\n\n  selectButtonContent = () => {\n    this.setState({\n      checkmark: \"block\",\n      selectText: \"none\"\n    });\n  };\n\n  render() {\n    const currentUser = this.state.currentUser;\n    return (\n      <Ons.Page className=\"page\">\n        <div className=\"profilDetails\">\n          {this.renderProfileImage()}\n          <div className=\"profileName\">\n            <h2>{currentUser && currentUser.displayName}</h2>\n            <div>\n              <Ons.Button modifier=\"material\" onClick={this.signOut}>\n                Sign out <Ons.Icon icon=\"sign-out-alt\" />\n              </Ons.Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"editName\">\n          <Ons.Input\n            value={this.state.name}\n            onChange={event => {\n              this.setState({ name: event.target.value });\n            }}\n            modifier=\"underbar\"\n            float\n            placeholder=\"Update Name\"\n            className=\"updateName\"\n            requried\n          />\n          <Ons.Fab\n            className=\"saveButton\"\n            onClick={this.editProfileName.bind(this)}\n          >\n            <Ons.Icon icon=\"save\" />\n          </Ons.Fab>\n        </div>\n        <form>\n          <input\n            className=\"uploadImage\"\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image/*\"\n            id=\"photo\"\n            onChange={this.selectButtonContent}\n          />\n          <label htmlFor=\"photo\" className=\"uploadImage\">\n            <span style={{ display: this.state.selectText }}>Select Image</span>\n            <Ons.Icon icon=\"check\" style={{ display: this.state.checkmark }} />\n          </label>\n          <Ons.Button\n            modifier=\"material\"\n            onClick={this.upload}\n            className=\"uploadImage\"\n          >\n            <span style={{ display: this.state.uploadText }}>Upload</span>\n            <Ons.Icon\n              spin\n              icon=\"sync-alt\"\n              style={{ display: this.state.spinner }}\n            />\n          </Ons.Button>\n        </form>\n        <div className=\"your_posts\">\n          <p>Här kommer användarens posts</p>\n        </div>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass ErrorPopUp extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    \n  }\n\n\n\n  handleCancel(){\n    console.log(\"clicked handleCancel\");\n  }\n\n  renderToast(){\n    return (\n        <Ons.Toast isOpen={this.props.isOpen}>\n          <div className=\"message\">\n            {this.props.message}\n          </div>\n          <button onClick={() => this.props.onCancel()}>\n            Dismiss\n          </button>\n        </Ons.Toast>\n      );\n  }\n\n  renderAlertDialog(){\n    return (\n      <Ons.AlertDialog isOpen={this.props.isOpen} onCancel={() => this.props.onCancel()} cancelable>\n       <div className=\"alert-dialog-title\">Warning!</div>\n       <div className=\"alert-dialog-content\">\n          {this.props.message}\n       </div>\n       <div className=\"alert-dialog-footer\">\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\n           Cancel\n         </button>\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\n           Ok\n         </button>\n       </div>\n     </Ons.AlertDialog>\n    );\n  }\n\n  showError(){\n    let toRet;\n    switch(this.props.type){\n      case \"AlertDialog\":\n        toRet = this.renderAlertDialog();\n        break;\n      case \"Toast\":\n        toRet =  this.renderToast();\n        break;\n      default:\n        toRet = this.renderAlertDialog();\n        break;\n    }\n    return toRet;\n  }\n\n  render() {\n    let toReturn = this.showError();\n    return (<span>{toReturn}</span>)\n  }\n}\n\nexport default ErrorPopUp;\n","\nimport React, { Component } from 'react';\nimport { ReactMic } from 'react-mic';\nimport { Line } from 'rc-progress';\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nimport ErrorPopUp from \"./ErrorPopUp\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false,\n      audioBlob: null,\n      isRecording: false,\n      isPaused: false,\n      title: \"\",\n      keyword: \"\",\n      time: 0,\n      uploading: false,\n    };\n    this.onStop = this.onStop.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.setState({\n      time: this.state.time + 1\n    }), 1000);\n    setTimeout(this.stopRecording, 10000);\n  }\n\n  stopTimer() {\n    this.setState({time: 0});\n    clearInterval(this.timer);\n  }\n\n  componentDidMount = () => {\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.storageRef = storage.ref();\n    this.db = firebase.firestore();\n  };\n\n  startRecording = () => {\n    this.setState({\n      record: true\n    });\n    this.startTimer();\n  };\n\n  stopRecording = () => {\n    this.setState({\n      record: false\n    });\n    console.log(this.state.time);\n    this.stopTimer();\n  };\n\n  onData(recordedBlob) {\n    console.log(\"chunk of real-time data is: \", recordedBlob);\n  }\n\n  onStop(recordedBlob) {\n    this.setState({\n      blobURL: recordedBlob.blobURL,\n      audioBlob: recordedBlob.blob\n    });\n  }\n\n  validUserInput(){\n    if (!this.state.title || this.state.title.length === 0){\n      this.props.createErrorMessage(\"Please enter a title of your recording.\", \"Toast\");\n      return false;\n    }\n    else if(!this.state.keyword || !(this.state.keyword.match(/^[a-zA-Z0-9]+$/))){\n      this.props.createErrorMessage(\"You can only write one (1) keyword, use letters and/or numbers.\", \"Toast\");\n      return false;\n    } \n    else {\n      return true;\n    }\n  }\n\n  uploadRecording = () => {\n    const { audioBlob, title, keyword } = this.state;\n\n    if(!this.validUserInput()){\n      return;\n    }\n    if(!audioBlob){\n      this.props.createErrorMessage(\"A recording is required to be able to post to the Soundy feed.\", \"Toast\");\n      return;\n    }\n    \n    this.setState({uploading: true})\n    const { uid } = firebase.auth().currentUser;\n\n    \n    console.log(uid);\n    var timeStamp = +new Date();\n    var soundRef = this.storageRef.child('sounds/' + timeStamp);\n\n    this.props.updateImagesFromUnsplash(keyword)\n    .then((imgUrl) => {\n    soundRef\n      .put(audioBlob)\n      .then(snapshot => {\n        //It is now uploaded to storage\n        soundRef.getDownloadURL().then(downloadURL => { \n          this.db.collection('all-sounds').add({\n            //Add to database\n            url: downloadURL,\n            user: uid,\n            time: timeStamp,\n            title: title,\n            keyword: keyword,\n            imgUrl:imgUrl,\n          }).then(this.setState({\n                audioBlob: null,\n                blobURL: \"\",\n                keyword:\"\",\n                title: \"\",\n                uploading: false}));\n        });\n      })\n       // For some reason, the catch block below isn't reached when an error occures.\n       // Solved it by adding another type of check earlier in the function\n      .catch(error => {\n        console.log('ERROR: ' + error.message);\n        this.props.createErrorMessage(error.message, \"Toast\");\n      });\n    });\n  }\n\n  render() {\n    const { blobURL, audioURL, isRecording, isPaused, title, uploading } = this.state;\n    let recordButton;\n\n    switch(this.state.record){\n      case false:\n        recordButton = <ons-icon onClick={this.startRecording} \n                                 icon=\"fa-circle\" \n                                 size=\"30px\"\n                                 style={{color: \"red\"}}></ons-icon>;\n        break;\n      case true:\n        recordButton = <ons-icon onClick={this.stopRecording} \n                                 icon=\"fa-stop-circle\" \n                                 size=\"56px\"\n                                 style={{color: \"red\"}}></ons-icon>;\n        break;\n      default:\n        recordButton = <h1>Something is wrong</h1>;\n        break;\n    }\n    return (\n      <Ons.Page>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#4C78FB\"\n          backgroundColor=\"#000000\"\n        />\n        <div>\n              <ons-fab class=\"fab fab--material\">\n                {recordButton}\n              </ons-fab>\n        </div>\n        <br/>\n        <Line percent={this.state.time * 10} style={{width: \"80%\"}}strokeWidth=\"4\" strokeColor=\"#D3D3D3\" />\n        <p>{this.state.time} out of 10s</p>\n        <h2>Listen to your recording:</h2>\n        <div>\n          <audio ref=\"audioSource\" controls=\"controls\" src={blobURL} />\n        </div>\n        <div>\n          <Ons.Input\n            value={this.state.title}\n            onChange={event => {\n              this.setState({ title: event.target.value });\n            }}\n            modifier=\"material\"\n            float\n            placeholder=\"Title\"\n            style={{ width: \"80vw\" }}\n          />\n        </div>\n        <div>\n          <Ons.Input\n            value={this.state.keyword}\n            onChange={event => {\n              this.setState({ keyword: event.target.value });\n            }}\n            modifier=\"material\"\n            float\n            placeholder=\"Enter 1 keyword\"\n            style={{ width: \"80vw\" }}\n          />\n        </div>\n        <div>\n          <Ons.Button\n            modifier=\"material\"\n            onClick={this.uploadRecording}\n            className=\"uploadImage\"\n          >\n            <Ons.Icon\n              spin = {uploading}\n              icon={uploading ? \"sync-alt\" : \"fa-cloud-upload-alt\"}\n              style={{ display: this.state.spinner }}\n            />\n            \n            <span> Upload</span>\n\n          </Ons.Button>\n        </div>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Upload;\n","\n\nconst config = {\n  apiKey: \"AIzaSyAJZXBhqNSQG9VplYDMM-v0cADz10r16-M\",\n  authDomain: \"soundy-dm2518.firebaseapp.com\",\n  databaseURL: \"https://soundy-dm2518.firebaseio.com\",\n  projectId: \"soundy-dm2518\",\n  storageBucket: \"soundy-dm2518.appspot.com\",\n  messagingSenderId: \"431756069486\"\n};\n\nconst unsplashApiKeys = {\n\taccess_key: '2a745e3aed8f6d1704ea605cf1714be80d3fdf38fabf4e6c09a098b770cf97a6',\n\tsecret_key: '33be076d60849f65a6bf319f8b9631b63b4ca166ae5bdbf941cfb381960564e0'\n}\n\nexport default {config, unsplashApiKeys};","import React, { Component } from \"react\";\n\nimport { redirectWhenOAuthChanges } from \"../utils\";\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nimport Feed from \"./Feed\";\nimport Profile from \"./Profile\";\nimport Upload from \"./Upload\";\n//import AudioTest from '../AudioRecorder/AudioTest';\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n// import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport config from \"../secrets.js\";\n\n// ES Modules syntax\nimport Unsplash, { toJson } from \"unsplash-js\";\n\n// require syntax\n\nclass TabContainer extends Component {\n  // in the this.state.posts array we can save the results from our database queries\n  // these can then automatically be shown in Feed.jsx by passing the state as a prop\n  // By saving the data here we don't have to do a new API call every time we switch tabs\n  constructor(props) {\n    super(props);\n    // connecting to Unsplash to get images automatically\n    const Unsplash = require(\"unsplash-js\").default;\n    //console.log(config);\n    let unsplash = new Unsplash({\n      applicationId: config.unsplashApiKeys.access_key,\n      secret: config.unsplashApiKeys.secret_key\n    });\n\n    this.getAllUsers = firebase.functions().httpsCallable('getAllUsers');\n\n    this.state = {\n      currentUser: null,\n      index: 0,\n      posts: [\n        {\n          title: \"dog\",\n          postedBy: \"Herman\"\n        },\n        {\n          title: \"cat\",\n          postedBy: \"OtherUser\"\n        },\n        {\n          title: \"hat\",\n          postedBy: \"David\"\n        }\n      ],\n      unsplash: unsplash,\n      status: \"loading\",\n\n      // states for the audio recording\n      allSounds: [],\n      lastKnownKey:\"\",\n      hasMore:true,\n    };\n  }\n\n  // metod innehållandes kod vi kan använda när vi laddar in databasresultat?\n  // returns the promise of a JSON object containing information about a picture\n  // 50 requests per hour\n  async updateImagesFromUnsplash(keyWord) {\n    if (!keyWord) {\n      // default to something if no keywoard was supplied\n      return \"https://i.imgur.com/dBmYY4M.png\";\n    }\n\n    // Söker efter en bild matchande det sökord som ges\n    // Måste använda try-catch för att kunna fånga upp ifall API-queryn ger error\n    try {\n      let unsplashResult = await this.state.unsplash.search.photos(\n        keyWord,\n        1,\n        1\n      );\n      unsplashResult = await toJson(unsplashResult);\n      return unsplashResult.results[0].urls.thumb;\n    } catch (error) {\n      // Ifall vi får error ge nån default bild (t.ex. ifall vi uppnåt quota för unsplashAPI)\n      console.log(error);\n      return \"https://i.imgur.com/dBmYY4M.png\";\n    }\n  }\n\n  async componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history);\n\n    // kopplar upp till databasen\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.storageRef = storage.ref();\n    this.db = firebase.firestore();\n    this.fetchAllSounds();\n  }\n\n  // Anropar databasen och sparar alla query-resultat i this.state\n  // Keeps track of the last item in the allSounds array by saving it to state\n  fetchAllSounds = async () => {\n    if(navigator.onLine){\n      const usersFromDatabase = await this.fetchAllUsers()\n      var allSounds = [];\n      try{\n        await this.db\n        .collection('all-sounds')\n        .orderBy('time', 'desc')\n        .limit(10)\n        .get()\n        .then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            let soundData = doc.data()\n            const correctUser = usersFromDatabase.find(user => user.uid === soundData.user)\n            soundData.userName = correctUser ? correctUser.displayName : \"-\"\n            soundData.photoURL = correctUser ? correctUser.photoURL : null\n            soundData.id = doc.id\n            allSounds.push(soundData);\n          })})\n        .then(() => \n          this.setState({ \n            allSounds: allSounds,\n            status:\"loaded\",\n          }, () => this.setState({\n            lastKnownKey: this.state.allSounds[this.state.allSounds.length-1].time,            \n          }))\n        )\n        .catch(error => {\n          this.props.createErrorMessage(\"Error when fetching new sounds. See the log for more details\", \"Toast\");\n          console.log(error);\n        });\n      } catch(err){\n        this.props.createErrorMessage(err, \"Toast\");\n        console.log(err);\n      }\n    } else {\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\n    }\n  };\n\n  // Slightly different version of the one above.\n  // Fetches new posts from the database, starting from the last time-ID currently loaded.\n  // Excludes the last one currently shown so as not to create duplicates\n  // Keeps track of the last item in the allSounds array by saving it to state\n  fetchAdditionalSounds = async () => {\n    if(navigator.onLine){\n        const usersFromDatabase = await this.fetchAllUsers()\n        var allSounds = this.state.allSounds;\n        try{\n          await this.db\n          .collection('all-sounds')\n          .orderBy('time', 'desc')\n          .startAt(this.state.lastKnownKey)\n          .limit(10)\n          .get()\n          .then(querySnapshot => {\n            if (querySnapshot.size === 1) {\n              // ifall vi bara får ett resultat innebär det att det inte finns mer att ladda\n              this.setState({\n                hasMore:false,\n              });\n              this.props.createErrorMessage(\"No more posts available.\", \"Toast\");\n            }\n            querySnapshot.forEach(doc => {\n              let soundData = doc.data()\n              const correctUser = usersFromDatabase.find(user => user.uid === soundData.user)\n              soundData.userName = correctUser ? correctUser.displayName : \"-\"\n              soundData.photoURL = correctUser ? correctUser.photoURL : null\n            if (soundData.time !== this.state.lastKnownKey) {\n              allSounds.push(soundData);\n            }\n          })})\n        .then(() => \n          this.setState({ \n            allSounds: allSounds,\n            status:\"loaded\",\n          }, () => this.setState({\n            lastKnownKey: this.state.allSounds[this.state.allSounds.length-1].time,            \n          }))\n        )\n        .catch(error => {\n          this.props.createErrorMessage(\"Error when fetching new sounds. See the log for more details\", \"Toast\");\n          console.log(error);\n        });\n        } catch(err){\n          this.props.createErrorMessage(err, \"Toast\");\n          console.log(err);\n        }\n      } else {\n        this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\n      }\n    };    \n\n  fetchAllUsers = () => {\n    return this.getAllUsers().then(result => {\n      return result.data.users\n    }).catch(err => {\n      return []\n    })\n  }\n\n  // logga-ut knapp\n  signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        console.log(\"Signed out completed\");\n      })\n      .catch((error) => {\n        console.log('Error when signing out' + error);\n        this.props.createErrorMessage(\"Error when signing out \" + error, \"Toast\");\n        });\n    }\n\n\n  renderToolbar() {\n    return (\n      <Ons.Toolbar>\n        <div className=\"center\">Soundy</div>\n      </Ons.Toolbar>\n    );\n  }\n\n  render() {\n    // Visar bara posts ifall allt laddat klart. Kan med fördel användas till ljud-filerna\n    let feedPage;\n    switch (this.state.status) {\n      case \"loading\":\n        feedPage =\n        <div style={{'paddingTop':'50%'}}>\n          <Ons.Icon\n            spin\n            icon=\"sync-alt\"\n          />\n        </div>;\n        break;\n      case \"loaded\":\n        feedPage = <Feed \n                      posts = {this.state.posts}\n                      allSounds = {this.state.allSounds}\n                      fetchAllSounds = {() => this.fetchAllSounds()}\n                      createErrorMessage = {(msg, type) => this.props.createErrorMessage(msg, type)}\n                      fetchAdditionalSounds = {() => this.fetchAdditionalSounds()}\n                      hasMore = {this.state.hasMore}\n                    />\n\n        break;\n      default:\n        feedPage = <p>something wrong</p>;\n        break;\n    }\n\n    return (\n      <Ons.Page renderToolbar={this.renderToolbar}>\n        <Ons.Tabbar\n          onPreChange={({ index }) => this.setState({ index: index })}\n          onPostChange={() => console.log(\"postChange\")}\n          onReactive={() => console.log(\"postChange\")}\n          position=\"bottom\"\n          index={this.state.index}\n          renderTabs={(activeIndex, tabbar) => [\n            {\n              content: <Ons.Page key=\"Feed\">{feedPage}</Ons.Page>,\n              tab: <Ons.Tab label=\"Feed\" icon=\"fa-headphones\" key=\"FeedTab\" />\n            },\n            {\n              content: (\n                <Ons.Page key=\"Upload\">\n                  <Upload \n                    createErrorMessage = {(message, type) => this.props.createErrorMessage(message, type)}\n                    updateImagesFromUnsplash = {(keyWord) => this.updateImagesFromUnsplash(keyWord)}\n                  />\n                </Ons.Page>\n              ),\n              tab: (\n                <Ons.Tab label=\"Upload\" icon=\"fa-microphone\" key=\"UploadTab\" />\n              )\n            },\n            {\n              content: (\n                <Ons.Page key=\"Profile\">\n                  <Profile \n                    createErrorMessage = {(message, type) => this.props.createErrorMessage(message, type)}\n                  />\n                </Ons.Page>\n              ),\n              tab: <Ons.Tab label=\"Profile\" icon=\"fa-user\" key=\"ProfileTab\" />\n            }\n          ]}\n        />\n      </Ons.Page>\n    );\n  }\n}\n\nexport default TabContainer;\n","import React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport CreateUser from './CreateUser'\nimport Loading from \"./Loading\";\nimport TabContainer from \"./Containers/TabContainer\";\nimport ErrorPopUp from \"./Containers/ErrorPopUp\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props){\n  \tsuper(props);\n  \tthis.state = {\n\t  errorOccured:false,\n      errorMessage:\"\",\n      errorMessageType:\"\",\n  \t}\n  \twindow.addEventListener(\"offline\",(e) =>  {\n    \tthis.createErrorMessage(\"No internet connection detected. \\nThe app won't function properly.\", \"Toast\");\n\t});\n  }\n\n  createErrorMessage(message, type){\n  \tthis.setState({\n  \t\terrorOccured:true,\n  \t\terrorMessage:message,\n  \t\terrorMessageType:type,\n  \t});\n  }\n\n  cancelErrorMessage(){\n  \tthis.setState({\n  \t\terrorOccured:false,\n  \t\terrorMessage:\"\",\n  \t\terrorMessageType:\"\",\n  \t})\n  }\n\n  render() {\n    return (\n      <div>\n        <header className = \"App-header\">\n          <Route path=\"/\" exact component={Loading} />\n          <Route path=\"/login\" exact \n  \t        render ={(props) => <Login {...props}  \n          \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \n          \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\n          \t\t\t\t\t\t/>}\n          />\n  \t\t\t\t<Route path=\"/create\" exact \n  \t        render ={(props) => <CreateUser {...props}  \n          \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \n          \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\n          \t\t\t\t\t\t/>}\n          />\n          \n          <Route path=\"/TabContainer\" \n          \trender ={ (props) => <TabContainer {...props}  \n          \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \n          \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\n          \t\t\t\t\t\t\t/>}\n          />\n    \t    <ErrorPopUp \n    \t      type = {this.state.errorMessageType}\n    \t      isOpen = {this.state.errorOccured} \n    \t      message = {this.state.errorMessage}\n    \t      onCancel = {() => this.cancelErrorMessage()}\n    \t    />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <Route path=\"/TabContainer\" \n//         \trender ={ () => \n//         \t\t<TabContainer createErrorMessage = {() => this.createErrorMessage()} cancelErrorMessage = {() => this.cancelErrorMessage()} /> \n//         \t}\n//     \t/>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport config from \"./secrets\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp(config.config);\n\nReactDOM.render(\n\t<HashRouter>\n    \t<App />\n  \t</HashRouter>\n\t, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}