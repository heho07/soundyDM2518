{"version":3,"sources":["utils.js","Login.js","CreateUser.js","Loading.js","Components/ImageSoundPlayer.jsx","Containers/ShowUsersPosts.jsx","Containers/Feed.jsx","Containers/Profile.jsx","Containers/ErrorPopUp.jsx","Containers/Upload.jsx","secrets.js","Containers/TabContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["redirectWhenOAuthChanges","history","firebase","onAuthStateChanged","user","push","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInWithGoogle","signInWithPopup","then","result","token","credential","accessToken","console","log","catch","error","errorCode","code","errorMessage","message","email","createErrorMessage","signInWithFacebook","loginClicked","_this$state","state","password","signInWithEmailAndPassword","errorMsg","react_default","a","createElement","react_onsenui","className","_this2","renderToolbar","onSubmit","event","preventDefault","value","onChange","setState","target","type","modifier","float","placeholder","style","width","onClick","visibility","height","icon","href","Component","CreateUser","createClick","displayName","createUserWithEmailAndPassword","userCredentials","updateProfile","Start","ImageSoundPlayer","soundClick","playing","refToSound","pause","play","item","img","imgUrl","key","time","src","photoURL","pushPage","userName","alt","opacity","ref","x","onWaiting","handleAudioWaiting","url","title","keyword","lib_default","date","Date","ShowUsersPosts","getUsersPost","uid","db","collection","where","get","querySnapshot","posts","forEach","doc","documentData","data","sort","b","listOfPosts","hasFetched","nextProps","nextState","map","post","shouldShowDeleteButton","upload","renderListItems","Feed","foo","done","fetchAllSounds","onLoad","bind","pullHookState","size","spin","display","spinner","that","items","allSounds","element","i","Components_ImageSoundPlayer","id","userID","react_infinite_scroller_default","pageStart","loadMore","loadItems","initialLoad","hasMore","loader","useWindow","page","fetchAdditionalSounds","renderPullHook","renderInfiniteScroller","Navigator","route","navigator","_this3","component","Feed_Feed","assign","hasBackButton","popPage","Containers_ShowUsersPosts","swipeable","renderPage","initialRoute","Profile","signOut","currentUser","storageRef","child","file","document","querySelector","files","uploadText","name","metadata","contentType","put","snapshot","getDownloadURL","test","image","checkmark","selectText","selectButtonContent","firebaseAuthListener","storage","_this4","renderProfileImage","requried","editProfileName","accept","htmlFor","ErrorPopUp","isOpen","onCancel","cancelable","toRet","renderAlertDialog","renderToast","toReturn","showError","Upload","componentDidMount","startRecording","record","startTimer","stopRecording","stopTimer","uploadRecording","audioBlob","validUserInput","uploading","timeStamp","soundRef","updateImagesFromUnsplash","downloadURL","add","blobURL","isRecording","isPaused","onStop","assertThisInitialized","timer","setInterval","setTimeout","clearInterval","recordedBlob","blob","length","match","recordButton","_this$state2","audioURL","color","es","onData","strokeColor","backgroundColor","class","rc_progress_es","percent","strokeWidth","controls","secrets","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","unsplashApiKeys","access_key","secret_key","TabContainer","asyncToGenerator","regenerator_default","mark","_callee","usersFromDatabase","wrap","_context","prev","next","onLine","fetchAllUsers","sent","orderBy","limit","soundData","correctUser","find","status","lastKnownKey","t0","stop","_callee2","_context2","startAt","getAllUsers","users","err","unsplash","Unsplash","require","default","applicationId","secret","httpsCallable","index","postedBy","keyWord","search","photos","unsplashResult","toJson","results","urls","thumb","_context3","feedPage","paddingTop","Containers_Feed","msg","onPreChange","_ref3","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","content","tab","label","Containers_Upload","Containers_Profile","App","errorOccured","errorMessageType","window","addEventListener","e","react_router","path","exact","Loading","render","src_Login","cancelErrorMessage","src_CreateUser","Containers_TabContainer","Containers_ErrorPopUp","Boolean","location","hostname","ReactDOM","react_router_dom","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d773f1a.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const redirectWhenOAuthChanges = history => {\r\n  firebase.auth().onAuthStateChanged(user => {\r\n    history.push(user ? \"/TabContainer\" : \"/login\");\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { redirectWhenOAuthChanges } from \"./utils\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport * as Ons from \"react-onsenui\";\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { email: \"\", password: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history)\r\n  }\r\n\r\n  signInWithGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then(function(result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with google!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Google-sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  signInWithFacebook = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then(function(result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with Facebook!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Facebook sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  loginClicked = () => {\r\n    const { email, password } = this.state;\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch(error => {\r\n        console.log(this.state.email);\r\n        let errorMsg = (\"Error logging in! \" + error.code + \" \" + error.message);\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n      });\r\n  };\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Welcome</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\r\n        <h1>Soundy</h1>\r\n          <form onSubmit = {(event) => {\r\n            event.preventDefault();\r\n            this.loginClicked();\r\n          }}>\r\n            <p>\r\n                <Ons.Input\r\n                  value={this.state.email}\r\n                  onChange={event => {\r\n                    this.setState({ email: event.target.value });\r\n                  }}\r\n                  type=\"email\"\r\n                  modifier=\"underbar\"\r\n                  float\r\n                  placeholder=\"Email\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.password}\r\n                  onChange={event => {\r\n                    this.setState({ password: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  type=\"password\"\r\n                  float\r\n                  placeholder=\"Password\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <br />\r\n              <p>\r\n                <Ons.Button\r\n                  onClick={this.loginClicked}\r\n                  modifier=\"underbar\"\r\n                  style={{ width: \"60vw\" }}\r\n                >\r\n                  Log in\r\n                </Ons.Button>\r\n              </p>\r\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\r\n          </form>\r\n        <br />\r\n        <p>\r\n          <Ons.Button\r\n            className=\".fb-google-button\"\r\n            modifier=\"underbar\"\r\n            style={{ width: \"60vw\" }}\r\n            onClick={this.signInWithGoogle}\r\n          >\r\n            <Ons.Icon icon=\"google\" /> Sign in with Google\r\n          </Ons.Button>\r\n        </p>\r\n        <p>\r\n          <Ons.Button\r\n            className=\".fb-google-button\"\r\n            modifier=\"underbar\"\r\n            style={{ width: \"60vw\" }}\r\n            onClick={this.signInWithFacebook}\r\n          >\r\n            <Ons.Icon icon=\"facebook\" /> Sign in with Facebook\r\n          </Ons.Button>\r\n        </p>\r\n        <a href='javascript:;' onClick={() => {this.props.history.push('/create')}}>Don't have an account? Click here</a>\r\n\r\n      </Ons.Page>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport * as Ons from \"react-onsenui\";\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nclass CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { email: \"\", displayName: \"\",password: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n  signInWithGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then(function(result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with google!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Google-sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  signInWithFacebook = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then(function(result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with Facebook!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Facebook sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  createClick = () => {\r\n    const { email, displayName, password } = this.state;\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        userCredentials.user.updateProfile({displayName: displayName})\r\n      })\r\n      .catch(error => {\r\n        console.log(this.state.email);\r\n        let errorMsg = (\"Error creating user! \" + error.code + \" \" + error.message);\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n      });\r\n  };\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Welcome</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\r\n        <h1>Soundy</h1>\r\n          <form onSubmit = {(event) => {\r\n            event.preventDefault();\r\n            this.loginClicked();\r\n          }}>\r\n            <p>\r\n                <Ons.Input\r\n                  value={this.state.email}\r\n                  onChange={event => {\r\n                    this.setState({ email: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  type=\"email\"\r\n                  float\r\n                  placeholder=\"Email\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.displayName}\r\n                  onChange={event => {\r\n                    this.setState({ displayName: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  float\r\n                  placeholder=\"Display Name\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.password}\r\n                  onChange={event => {\r\n                    this.setState({ password: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  type=\"password\"\r\n                  float\r\n                  placeholder=\"Password\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <br />\r\n              \r\n              <p>\r\n                <Ons.Button\r\n                  onClick={this.createClick}\r\n                  modifier=\"underbar\"\r\n                  style={{ width: \"60vw\" }}\r\n                >\r\n                  Create Account\r\n                </Ons.Button>\r\n              </p>\r\n              <br />\r\n            <p>\r\n              <Ons.Button\r\n                className=\".fb-google-button\"\r\n                modifier=\"underbar\"\r\n                style={{ width: \"60vw\" }}\r\n                onClick={this.signInWithGoogle}\r\n              >\r\n                Create account with <Ons.Icon icon=\"google\" />\r\n              </Ons.Button>\r\n            </p>\r\n            <p>\r\n              <Ons.Button\r\n                className=\".fb-google-button\"\r\n                modifier=\"underbar\"\r\n                style={{ width: \"60vw\" }}\r\n                onClick={this.signInWithFacebook}\r\n              >\r\n                Create account with <Ons.Icon icon=\"facebook\" />\r\n              </Ons.Button>\r\n            </p>\r\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\r\n          </form>\r\n          <a href='javascript:;' onClick={() => {this.props.history.push('/login')}}>Already have an account? Click here</a>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { redirectWhenOAuthChanges } from \"./utils\";\r\n\r\nclass Start extends Component {\r\n  componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"App\">Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React, { Component } from \"react\";\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nimport TimeAgo from 'react-timeago'\r\nimport frenchStrings from 'react-timeago/lib/language-strings/fr'\r\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\nclass ImageSoundPlayer extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playing: false,\r\n    };\r\n    this.refToSound = {}\r\n  }\r\n\r\n \r\n\r\n  soundClick = () => {\r\n    if(!this.state.playing){\r\n      this.refToSound.play()\r\n      this.setState({playing: true})\r\n    } else {\r\n      this.refToSound.pause()\r\n      this.setState({playing: false})\r\n    }\r\n  }\r\n\r\n  // Each element to be shown in the feed\r\n  renderItem(item) {\r\n    \r\n  }\r\n\r\n  // Called if the audio player has to wait due to slow internet connection\r\n  handleAudioWaiting(){\r\n    this.props.createErrorMessage(\"Slow internet connection detected.\", \"Toast\");\r\n  }\r\n\r\n\r\n  render() {\r\n    const item = this.props.item\r\n    const {playing} = this.state\r\n    let img = item.imgUrl ? item.imgUrl : \"https://i.imgur.com/dBmYY4M.png\";    // old placeholder image \"https://i.imgur.com/hgyXyww.png\" \r\n    return (\r\n      <Ons.Card\r\n        key={item.time}>\r\n        <div>\r\n          <img src={item.photoURL} onClick ={() => this.props.pushPage(item.user)} className=\"profile-image-feed img-circle\"/>\r\n          <b onClick ={() => this.props.pushPage(item.user)} >{item.userName}</b>\r\n        </div>\r\n          <div className=\"imageButtonContainer\">\r\n            <img src = {img} style={{width: \"100%\"}} alt = \"placeholderText\"/>\r\n            <button\r\n              className=\"btn\"\r\n              style={{opacity: \"0.8\"}}\r\n              onClick={() => this.soundClick()}>\r\n              <ons-icon\r\n                icon = {playing ? \"pause\" : \"play\"}>\r\n              </ons-icon>\r\n            </button>\r\n          </div>\r\n          <audio\r\n            ref={(x) => {this.refToSound = x}}\r\n            onWaiting = {() => this.handleAudioWaiting()}>\r\n            <source src = {item.url}/>\r\n            <p>Your browser does not support audio. The file can be found at <a href = {item.url}>this link</a></p>  \r\n          </audio>     \r\n        <center>\r\n          <h4>{item.title} <i>#{item.keyword}</i></h4>\r\n        </center>\r\n        <p>\r\n          Posted <TimeAgo date={new Date(item.time)}/>\r\n        </p>\r\n      </Ons.Card>\r\n    );\r\n  }\r\n}\r\n      \r\nexport default ImageSoundPlayer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass ShowUsersPosts extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasFetched: false,\r\n      listOfPosts: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db = firebase.firestore();\r\n    if (this.props.user) {\r\n      this.getUsersPost(this.props.user);\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextState.hasFetched) {\r\n      return true;\r\n    } else {\r\n      if (nextProps.user) {\r\n        this.getUsersPost(nextProps.user);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  getUsersPost = user => {\r\n    const { uid } = user;\r\n    let postsFromUser = this.db\r\n      .collection(\"all-sounds\")\r\n      .where(\"user\", \"==\", uid);\r\n    return postsFromUser.get().then(querySnapshot => {\r\n      let posts = [];\r\n      querySnapshot.forEach(doc => {\r\n        let documentData = doc.data();\r\n        console.log(documentData);\r\n        posts.push(documentData);\r\n\r\n        //Lägg till de promise man får i en lista\r\n      });\r\n      posts.sort((a, b) => {\r\n        return b.time - a.time;\r\n      });\r\n      this.setState({ listOfPosts: posts, hasFetched: true });\r\n    });\r\n  };\r\n\r\n  renderListItems() {\r\n    console.log(\"renderListItems\");\r\n\r\n    return this.state.listOfPosts.map(post => (\r\n      <Ons.ListItem key={post.time}>\r\n        <div className=\"left\">\r\n          <img src={post.imgUrl} className=\"list-item__thumbnail\" />\r\n        </div>\r\n        <div className=\"center\">\r\n          <strong>\r\n            {post.title}\r\n            <i> #{post.keyword}</i>\r\n          </strong>\r\n        </div>\r\n\r\n        {this.props.shouldShowDeleteButton && (\r\n          <div className=\"right\">\r\n            <Ons.Fab onClick={this.upload} className=\"saveButton\">\r\n              <Ons.Icon icon=\"trash\" />\r\n            </Ons.Fab>\r\n          </div>\r\n        )}\r\n      </Ons.ListItem>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <Ons.List>{this.renderListItems()}</Ons.List>;\r\n  }\r\n}\r\n\r\nexport default ShowUsersPosts;\r\n","import React, { Component } from \"react\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\nimport ImageSoundPlayer from \"../Components/ImageSoundPlayer\";\r\n\r\nimport ShowUsersPosts from \"./ShowUsersPosts\";\r\n\r\nclass Feed extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foo: true,\r\n    };\r\n  }\r\n\r\n  // called from PullHook when the action is performed\r\n  async onLoad(done) {\r\n    await this.props.fetchAllSounds();\r\n    // await setTimeout(() => done(), 3000);\r\n    // ^^^^ Kan användas för att testa hur olika laddningsalternativ ser ut.\r\n    done();\r\n  }\r\n\r\n  // Used to request a new database query\r\n  renderPullHook() {\r\n    return (\r\n      <Ons.PullHook\r\n        onChange={this.onChange}\r\n        onLoad={this.onLoad.bind(this)} // bind this (the Feed.jsx object) to be able to use its methods and attributes\r\n      >\r\n        {this.state.pullHookState === \"initial\" ? (\r\n          <span>\r\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-down-a\" />\r\n            Pull down to refresh\r\n          </span>\r\n        ) : this.state.pullHookState === \"preaction\" ? (\r\n          <span>\r\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-up-a\" />\r\n            Release to refresh\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <Ons.Icon\r\n              spin\r\n              icon=\"sync-alt\"\r\n              style={{ display: this.state.spinner }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Ons.PullHook>\r\n    );\r\n  }\r\n\r\n  // https://www.npmjs.com/package/react-infinite-scroller\r\n  renderInfiniteScroller(that){\r\n    console.log(that);\r\n    let items = [];\r\n    this.props.allSounds.map((element, i) => {\r\n      items.push(<ImageSoundPlayer \r\n        item={element} \r\n        key={element.id} \r\n        createErrorMessage={this.props.createErrorMessage} \r\n        pushPage = {(userID) => this.props.pushPage(userID)}\r\n      />);\r\n    })\r\n    return (\r\n      <InfiniteScroll\r\n        pageStart={0}\r\n        loadMore={ this.loadItems.bind(this) } \r\n        initialLoad = { false }   // undviker att ladda när elementet först skapas iom att vi redan har data\r\n        hasMore={this.props.hasMore}\r\n        loader= {<div className=\"loader\" key={0}>Loading ...</div>}\r\n        // threshold = {1000}     // <---- om man vill sätta anpassad gräns för när den uppdaterar\r\n        useWindow = {false}       // <---- MUY IMPORTANTE, annars känner den inte av scrollen\r\n      >\r\n        <div>\r\n          {items}\r\n        </div> \r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  // The function called from infiniteScroller when new items are to be loaded\r\n  loadItems (page) {\r\n    console.log(\"Loading more items from the database\");\r\n    this.props.fetchAdditionalSounds();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page>\r\n        {this.renderPullHook()}\r\n        {this.renderInfiniteScroller()}\r\n    </Ons.Page>\r\n    );\r\n  }\r\n}\r\n              \r\n\r\n//  en klass som antingen visar Feed eller ShowUsersPost\r\nclass Navigator extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  renderPage(route, navigator){\r\n    switch(route.component){\r\n      case 'Feed':\r\n        // skickar med alla props till Feed samt även hur den kan nå ShowUsersPosts\r\n        return <Feed key = {route.component} {...this.props} pushPage = {(userID) => this.pushPage(navigator, userID)}/>\r\n      \r\n      default:\r\n        // om route inte är Feed så antas det att det är ett user ID och försöker visa detta.\r\n        return (\r\n        <Ons.Page key = {route.component}>\r\n          {route.hasBackButton ? <button onClick = {() => navigator.popPage()}>go back</button> : <span/>} \r\n          <ShowUsersPosts \r\n            user = {{uid:route.component}}\r\n            shouldShowDeleteButton={false}\r\n            />\r\n        </Ons.Page>);\r\n        \r\n    }\r\n  }\r\n\r\n  // lägger till en route i navigatorns stack\r\n  pushPage(navigator, route){\r\n    navigator.pushPage({component:route, hasBackButton: true});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page>\r\n       <Ons.Navigator\r\n        swipeable\r\n        renderPage={this.renderPage.bind(this)}\r\n        initialRoute={{\r\n          component:\"Feed\",\r\n          hasBackButton: false\r\n        }}\r\n      />\r\n    </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigator;\r\n\r\n","import React, { Component } from \"react\";\r\nimport ShowUsersPosts from \"./ShowUsersPosts\";\r\n//import { redirectWhenOAuthChanges } from \"../utils\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass Profile extends Component {\r\n  // behövde skriva om koden med en konstruktor för att få tillgång till props\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      name: null,\r\n      photoURL: null,\r\n      image: \"\",\r\n      checkmark: \"none\",\r\n      spinner: \"none\",\r\n      selectText: \"inherent\",\r\n      uploadText: \"inherent\",\r\n      listOfPosts: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.firebaseAuthListener = firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({ currentUser: user });\r\n      }\r\n    });\r\n\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.firebaseAuthListener && this.firebaseAuthListener();\r\n  }\r\n\r\n  signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function() {\r\n        console.log(\"Signed out completed\");\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error when signing out\" + error);\r\n        this.props.createErrorMessage(\r\n          \"Error when signing out. See log for more details\",\r\n          \"AlertDialog\"\r\n        );\r\n      });\r\n  };\r\n\r\n  renderProfileImage() {\r\n    const currentUser = this.state.currentUser; \r\n    if (currentUser && currentUser.photoURL === null) {\r\n      console.log(currentUser.userName);\r\n      return (\r\n        <img\r\n          src=\"https://t4.ftcdn.net/jpg/02/15/84/43/240_F_215844325_ttX9YiIIyeaR7Ne6EaLLjMAmy4GvPC69.jpg\"\r\n          alt=\"No Display Name\"\r\n          className=\"userPhoto\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          src={currentUser && currentUser.photoURL}\r\n          alt={currentUser && currentUser.displayName}\r\n          className=\"userPhoto\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  editProfileName() {\r\n    var user = firebase.auth().currentUser;\r\n    this.state.name !== null &&\r\n      user\r\n        .updateProfile({\r\n          displayName: this.state.name\r\n        })\r\n        .then(test => {\r\n          this.setState({ currentUser: user, name: null });\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error updating! \" + error.code + \" \" + error.message);\r\n          this.createErrorMessage(\r\n            \"Error editing profile. See log for more details\",\r\n            \"AlertDialog\"\r\n          );\r\n        });\r\n  }\r\n\r\n  upload = () => {\r\n    var user = firebase.auth().currentUser;\r\n    const ref = this.storageRef.child(\"profileImages\");\r\n    const file = document.querySelector(\"#photo\").files[0];\r\n    if (file) {\r\n      this.setState({ uploadText: \"none\", spinner: \"block\" });\r\n      const name = user.uid;\r\n      const metadata = {\r\n        contentType: file.type\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then(snapshot => snapshot.ref.getDownloadURL())\r\n        .then(url => {\r\n          user\r\n            .updateProfile({\r\n              photoURL: url\r\n            })\r\n            .then(test => {\r\n              this.setState({\r\n                currentUser: user,\r\n                image: null,\r\n                checkmark: \"none\",\r\n                spinner: \"none\",\r\n                selectText: \"block\",\r\n                uploadText: \"block\"\r\n              });\r\n            })\r\n            .catch(function(error) {\r\n              // An error happened.\r\n              this.props.createErrorMessage(\r\n                \"Error uploading profile image.\",\r\n                \"AlertDialog\"\r\n              );\r\n            });\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  };\r\n\r\n  selectButtonContent = () => {\r\n    this.setState({\r\n      checkmark: \"block\",\r\n      selectText: \"none\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const currentUser = this.state.currentUser;\r\n\r\n    return (\r\n      <Ons.Page className=\"page\">\r\n        <div className=\"profilDetails\">\r\n          {this.renderProfileImage()}\r\n          <div className=\"profileName\">\r\n            <h2>{currentUser && currentUser.displayName}</h2>\r\n            <div>\r\n              <Ons.Button modifier=\"material\" onClick={this.signOut}>\r\n                Sign out <Ons.Icon icon=\"sign-out-alt\" />\r\n              </Ons.Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"edit\">\r\n          <div className=\"editName\">\r\n            <Ons.Input\r\n              value={this.state.name}\r\n              onChange={event => {\r\n                this.setState({ name: event.target.value });\r\n              }}\r\n              modifier=\"underbar\"\r\n              float\r\n              placeholder=\"Update Name\"\r\n              className=\"updateName\"\r\n              requried\r\n            />\r\n            <Ons.Fab\r\n              className=\"saveButton\"\r\n              onClick={this.editProfileName.bind(this)}\r\n            >\r\n              <Ons.Icon icon=\"save\" />\r\n            </Ons.Fab>\r\n          </div>\r\n          <form>\r\n            <input\r\n              className=\"uploadImage\"\r\n              type=\"file\"\r\n              name=\"photo\"\r\n              accept=\"image/*\"\r\n              id=\"photo\"\r\n              onChange={this.selectButtonContent}\r\n            />\r\n            <label htmlFor=\"photo\" className=\"uploadImage\">\r\n              <span style={{ display: this.state.selectText }}>\r\n                Select Image\r\n              </span>\r\n              <Ons.Icon\r\n                icon=\"check\"\r\n                style={{ display: this.state.checkmark }}\r\n              />\r\n            </label>\r\n            <Ons.Button\r\n              modifier=\"material\"\r\n              onClick={this.upload}\r\n              className=\"uploadImage\"\r\n            >\r\n              <span style={{ display: this.state.uploadText }}>Upload</span>\r\n              <Ons.Icon\r\n                spin\r\n                icon=\"sync-alt\"\r\n                style={{ display: this.state.spinner }}\r\n              />\r\n            </Ons.Button>\r\n          </form>\r\n        </div>\r\n\r\n        <ShowUsersPosts\r\n          user={this.state.currentUser}\r\n          shouldShowDeleteButton={true}\r\n        />\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass ErrorPopUp extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleCancel(){\r\n    console.log(\"clicked handleCancel\");\r\n  }\r\n\r\n  renderToast(){\r\n    return (\r\n        <Ons.Toast isOpen={this.props.isOpen}>\r\n          <div className=\"message\">\r\n            {this.props.message}\r\n          </div>\r\n          <button onClick={() => this.props.onCancel()}>\r\n            Dismiss\r\n          </button>\r\n        </Ons.Toast>\r\n      );\r\n  }\r\n\r\n  renderAlertDialog(){\r\n    return (\r\n      <Ons.AlertDialog isOpen={this.props.isOpen} onCancel={() => this.props.onCancel()} cancelable>\r\n       <div className=\"alert-dialog-title\">Warning!</div>\r\n       <div className=\"alert-dialog-content\">\r\n          {this.props.message}\r\n       </div>\r\n       <div className=\"alert-dialog-footer\">\r\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\r\n           Cancel\r\n         </button>\r\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\r\n           Ok\r\n         </button>\r\n       </div>\r\n     </Ons.AlertDialog>\r\n    );\r\n  }\r\n\r\n  showError(){\r\n    let toRet;\r\n    switch(this.props.type){\r\n      case \"AlertDialog\":\r\n        toRet = this.renderAlertDialog();\r\n        break;\r\n      case \"Toast\":\r\n        toRet =  this.renderToast();\r\n        break;\r\n      default:\r\n        toRet = this.renderAlertDialog();\r\n        break;\r\n    }\r\n    return toRet;\r\n  }\r\n\r\n  render() {\r\n    let toReturn = this.showError();\r\n    return (<span>{toReturn}</span>)\r\n  }\r\n}\r\n\r\nexport default ErrorPopUp;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { ReactMic } from 'react-mic';\r\nimport { Line } from 'rc-progress';\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nimport ErrorPopUp from \"./ErrorPopUp\";\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      record: false,\r\n      audioBlob: null,\r\n      isRecording: false,\r\n      isPaused: false,\r\n      title: \"\",\r\n      keyword: \"\",\r\n      time: 0,\r\n      uploading: false,\r\n    };\r\n    this.onStop = this.onStop.bind(this);\r\n  }\r\n\r\n  startTimer() {\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.state.time + 1\r\n    }), 1000);\r\n    setTimeout(this.stopRecording, 10000);\r\n  }\r\n\r\n  stopTimer() {\r\n    this.setState({time: 0});\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n  };\r\n\r\n  startRecording = () => {\r\n    this.setState({\r\n      record: true\r\n    });\r\n    this.startTimer();\r\n  };\r\n\r\n  stopRecording = () => {\r\n    this.setState({\r\n      record: false\r\n    });\r\n    console.log(this.state.time);\r\n    this.stopTimer();\r\n  };\r\n\r\n  onData(recordedBlob) {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  }\r\n\r\n  onStop(recordedBlob) {\r\n    this.setState({\r\n      blobURL: recordedBlob.blobURL,\r\n      audioBlob: recordedBlob.blob\r\n    });\r\n  }\r\n\r\n  validUserInput(){\r\n    if (!this.state.title || this.state.title.length === 0){\r\n      this.props.createErrorMessage(\"Please enter a title of your recording.\", \"Toast\");\r\n      return false;\r\n    }\r\n    else if(!this.state.keyword || !(this.state.keyword.match(/^[a-zA-Z0-9]+$/))){\r\n      this.props.createErrorMessage(\"You can only write one (1) keyword, use letters and/or numbers.\", \"Toast\");\r\n      return false;\r\n    } \r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  uploadRecording = () => {\r\n    const { audioBlob, title, keyword } = this.state;\r\n\r\n    if(!this.validUserInput()){\r\n      return;\r\n    }\r\n    if(!audioBlob){\r\n      this.props.createErrorMessage(\"A recording is required to be able to post to the Soundy feed.\", \"Toast\");\r\n      return;\r\n    }\r\n    \r\n    this.setState({uploading: true})\r\n    const { uid } = firebase.auth().currentUser;\r\n\r\n    \r\n    console.log(uid);\r\n    var timeStamp = +new Date();\r\n    var soundRef = this.storageRef.child('sounds/' + timeStamp);\r\n\r\n    this.props.updateImagesFromUnsplash(keyword)\r\n    .then((imgUrl) => {\r\n    soundRef\r\n      .put(audioBlob)\r\n      .then(snapshot => {\r\n        //It is now uploaded to storage\r\n        soundRef.getDownloadURL().then(downloadURL => { \r\n          this.db.collection('all-sounds').add({\r\n            //Add to database\r\n            url: downloadURL,\r\n            user: uid,\r\n            time: timeStamp,\r\n            title: title,\r\n            keyword: keyword,\r\n            imgUrl:imgUrl,\r\n          }).then(this.setState({\r\n                audioBlob: null,\r\n                blobURL: \"\",\r\n                keyword:\"\",\r\n                title: \"\",\r\n                uploading: false}));\r\n        });\r\n      })\r\n       // For some reason, the catch block below isn't reached when an error occures.\r\n       // Solved it by adding another type of check earlier in the function\r\n      .catch(error => {\r\n        console.log('ERROR: ' + error.message);\r\n        this.props.createErrorMessage(error.message, \"Toast\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { blobURL, audioURL, isRecording, isPaused, title, uploading } = this.state;\r\n    let recordButton;\r\n\r\n    switch(this.state.record){\r\n      case false:\r\n        recordButton = <ons-icon onClick={this.startRecording} \r\n                                 icon=\"fa-circle\" \r\n                                 size=\"30px\"\r\n                                 style={{color: \"red\"}}></ons-icon>;\r\n        break;\r\n      case true:\r\n        recordButton = <ons-icon onClick={this.stopRecording} \r\n                                 icon=\"fa-stop-circle\" \r\n                                 size=\"56px\"\r\n                                 style={{color: \"red\"}}></ons-icon>;\r\n        break;\r\n      default:\r\n        recordButton = <h1>Something is wrong</h1>;\r\n        break;\r\n    }\r\n    return (\r\n      <Ons.Page>\r\n        <ReactMic\r\n          record={this.state.record}\r\n          className=\"sound-wave\"\r\n          onStop={this.onStop}\r\n          onData={this.onData}\r\n          strokeColor=\"#4C78FB\"\r\n          backgroundColor=\"#000000\"\r\n        />\r\n        <div>\r\n              <ons-fab class=\"fab fab--material\">\r\n                {recordButton}\r\n              </ons-fab>\r\n        </div>\r\n        <br/>\r\n        <Line percent={this.state.time * 10} style={{width: \"80%\"}}strokeWidth=\"4\" strokeColor=\"#D3D3D3\" />\r\n        <p>{this.state.time} out of 10s</p>\r\n        <h2>Listen to your recording:</h2>\r\n        <div>\r\n          <audio ref=\"audioSource\" controls=\"controls\" src={blobURL} />\r\n        </div>\r\n        <div>\r\n          <Ons.Input\r\n            value={this.state.title}\r\n            onChange={event => {\r\n              this.setState({ title: event.target.value });\r\n            }}\r\n            modifier=\"material\"\r\n            float\r\n            placeholder=\"Title\"\r\n            style={{ width: \"80vw\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Ons.Input\r\n            value={this.state.keyword}\r\n            onChange={event => {\r\n              this.setState({ keyword: event.target.value });\r\n            }}\r\n            modifier=\"material\"\r\n            float\r\n            placeholder=\"Enter 1 keyword\"\r\n            style={{ width: \"80vw\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Ons.Button\r\n            modifier=\"material\"\r\n            onClick={this.uploadRecording}\r\n            className=\"uploadImage\"\r\n          >\r\n            <Ons.Icon\r\n              spin = {uploading}\r\n              icon={uploading ? \"sync-alt\" : \"fa-cloud-upload-alt\"}\r\n              style={{ display: this.state.spinner }}\r\n            />\r\n            \r\n            <span> Upload</span>\r\n\r\n          </Ons.Button>\r\n        </div>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAJZXBhqNSQG9VplYDMM-v0cADz10r16-M\",\r\n  authDomain: \"soundy-dm2518.firebaseapp.com\",\r\n  databaseURL: \"https://soundy-dm2518.firebaseio.com\",\r\n  projectId: \"soundy-dm2518\",\r\n  storageBucket: \"soundy-dm2518.appspot.com\",\r\n  messagingSenderId: \"431756069486\"\r\n};\r\n\r\nconst unsplashApiKeys = {\r\n\taccess_key: '2a745e3aed8f6d1704ea605cf1714be80d3fdf38fabf4e6c09a098b770cf97a6',\r\n\tsecret_key: '33be076d60849f65a6bf319f8b9631b63b4ca166ae5bdbf941cfb381960564e0'\r\n}\r\n\r\nexport default {config, unsplashApiKeys};","import React, { Component } from \"react\";\r\n\r\nimport { redirectWhenOAuthChanges } from \"../utils\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/functions\";\r\n\r\nimport Navigator from \"./Feed\";\r\nimport Profile from \"./Profile\";\r\nimport Upload from \"./Upload\";\r\nimport UsersPosts from \"./ShowUsersPosts\";\r\n//import AudioTest from '../AudioRecorder/AudioTest';\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n// import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nimport config from \"../secrets.js\";\r\n\r\n// ES Modules syntax\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\n\r\n// require syntax\r\n\r\nclass TabContainer extends Component {\r\n  // in the this.state.posts array we can save the results from our database queries\r\n  // these can then automatically be shown in Feed.jsx by passing the state as a prop\r\n  // By saving the data here we don't have to do a new API call every time we switch tabs\r\n  constructor(props) {\r\n    super(props);\r\n    // connecting to Unsplash to get images automatically\r\n    const Unsplash = require(\"unsplash-js\").default;\r\n    //console.log(config);\r\n    let unsplash = new Unsplash({\r\n      applicationId: config.unsplashApiKeys.access_key,\r\n      secret: config.unsplashApiKeys.secret_key\r\n    });\r\n\r\n    this.getAllUsers = firebase.functions().httpsCallable(\"getAllUsers\");\r\n\r\n    this.state = {\r\n      currentUser: null,\r\n      index: 2,\r\n      posts: [\r\n        {\r\n          title: \"dog\",\r\n          postedBy: \"Herman\"\r\n        },\r\n        {\r\n          title: \"cat\",\r\n          postedBy: \"OtherUser\"\r\n        },\r\n        {\r\n          title: \"hat\",\r\n          postedBy: \"David\"\r\n        }\r\n      ],\r\n      unsplash: unsplash,\r\n      status: \"loading\",\r\n\r\n      // states for the audio recording\r\n      allSounds: [],\r\n      lastKnownKey: \"\",\r\n      hasMore: true\r\n    };\r\n  }\r\n\r\n  // metod innehållandes kod vi kan använda när vi laddar in databasresultat?\r\n  // returns the promise of a JSON object containing information about a picture\r\n  // 50 requests per hour\r\n  async updateImagesFromUnsplash(keyWord) {\r\n    if (!keyWord) {\r\n      // default to something if no keywoard was supplied\r\n      return \"https://i.imgur.com/dBmYY4M.png\";\r\n    }\r\n\r\n    // Söker efter en bild matchande det sökord som ges\r\n    // Måste använda try-catch för att kunna fånga upp ifall API-queryn ger error\r\n    try {\r\n      let unsplashResult = await this.state.unsplash.search.photos(\r\n        keyWord,\r\n        1,\r\n        1\r\n      );\r\n      unsplashResult = await toJson(unsplashResult);\r\n      return unsplashResult.results[0].urls.thumb;\r\n    } catch (error) {\r\n      // Ifall vi får error ge nån default bild (t.ex. ifall vi uppnåt quota för unsplashAPI)\r\n      console.log(error);\r\n      return \"https://i.imgur.com/dBmYY4M.png\";\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history);\r\n\r\n    // kopplar upp till databasen\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n    this.fetchAllSounds();\r\n  }\r\n\r\n  // Anropar databasen och sparar alla query-resultat i this.state\r\n  // Keeps track of the last item in the allSounds array by saving it to state\r\n  fetchAllSounds = async () => {\r\n    if (navigator.onLine) {\r\n      const usersFromDatabase = await this.fetchAllUsers();\r\n      var allSounds = [];\r\n      try {\r\n        await this.db\r\n        .collection('all-sounds')\r\n        .orderBy('time', 'desc')\r\n        .limit(10)\r\n        .get()\r\n        .then(querySnapshot => {\r\n          querySnapshot.forEach(doc => {\r\n            let soundData = doc.data()\r\n            const correctUser = usersFromDatabase.find(user => user.uid === soundData.user)\r\n            soundData.userName = correctUser ? correctUser.displayName : \"-\"\r\n            soundData.photoURL = correctUser ? correctUser.photoURL : null\r\n            soundData.id = doc.id\r\n            allSounds.push(soundData);\r\n          })})\r\n        .then(() => \r\n          this.setState({ \r\n            allSounds: allSounds,\r\n            status:\"loaded\",\r\n          }, () => this.setState({\r\n            lastKnownKey: this.state.allSounds[this.state.allSounds.length-1].time,            \r\n          }))\r\n        )\r\n        .catch(error => {\r\n          this.props.createErrorMessage(\"Error when fetching new sounds. See the log for more details\", \"Toast\");\r\n          console.log(error);\r\n        });\r\n      } catch(err){\r\n        this.props.createErrorMessage(err, \"Toast\");\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\r\n    }\r\n  };\r\n\r\n  // Slightly different version of the one above.\r\n  // Fetches new posts from the database, starting from the last time-ID currently loaded.\r\n  // Excludes the last one currently shown so as not to create duplicates\r\n  // Keeps track of the last item in the allSounds array by saving it to state\r\n  fetchAdditionalSounds = async () => {\r\n    if (navigator.onLine) {\r\n      const usersFromDatabase = await this.fetchAllUsers();\r\n      var allSounds = this.state.allSounds;\r\n      try {\r\n        await this.db\r\n          .collection(\"all-sounds\")\r\n          .orderBy(\"time\", \"desc\")\r\n          .startAt(this.state.lastKnownKey)\r\n          .limit(10)\r\n          .get()\r\n          .then(querySnapshot => {\r\n            if (querySnapshot.size === 1) {\r\n              // ifall vi bara får ett resultat innebär det att det inte finns mer att ladda\r\n              this.setState({\r\n                hasMore: false\r\n              });\r\n              this.props.createErrorMessage(\r\n                \"No more posts available.\",\r\n                \"Toast\"\r\n              );\r\n            }\r\n            querySnapshot.forEach(doc => {\r\n              let soundData = doc.data();\r\n              const correctUser = usersFromDatabase.find(\r\n                user => user.uid === soundData.user\r\n              );\r\n              soundData.userName = correctUser ? correctUser.displayName : \"-\";\r\n              soundData.photoURL = correctUser ? correctUser.photoURL : null;\r\n              if (soundData.time !== this.state.lastKnownKey) {\r\n                allSounds.push(soundData);\r\n              }\r\n            });\r\n          })\r\n          .then(() =>\r\n            this.setState(\r\n              {\r\n                allSounds: allSounds,\r\n                status: \"loaded\"\r\n              },\r\n              () =>\r\n                this.setState({\r\n                  lastKnownKey: this.state.allSounds[\r\n                    this.state.allSounds.length - 1\r\n                  ].time\r\n                })\r\n            )\r\n          )\r\n          .catch(error => {\r\n            this.props.createErrorMessage(\r\n              \"Error when fetching new sounds. See the log for more details\",\r\n              \"Toast\"\r\n            );\r\n            console.log(error);\r\n          });\r\n      } catch (err) {\r\n        this.props.createErrorMessage(err, \"Toast\");\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\r\n    }\r\n  };\r\n\r\n  fetchAllUsers = () => {\r\n    return this.getAllUsers()\r\n      .then(result => {\r\n        return result.data.users;\r\n      })\r\n      .catch(err => {\r\n        return [];\r\n      });\r\n  };\r\n\r\n  // logga-ut knapp\r\n  signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function() {\r\n        console.log(\"Signed out completed\");\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error when signing out\" + error);\r\n        this.props.createErrorMessage(\r\n          \"Error when signing out \" + error,\r\n          \"Toast\"\r\n        );\r\n      });\r\n  };\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Soundy</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // Visar bara posts ifall allt laddat klart. Kan med fördel användas till ljud-filerna\r\n    let feedPage;\r\n    switch (this.state.status) {\r\n      case \"loading\":\r\n        feedPage = (\r\n          <div style={{ paddingTop: \"50%\" }}>\r\n            <Ons.Icon spin icon=\"sync-alt\" />\r\n          </div>\r\n        );\r\n        break;\r\n      case \"loaded\":\r\n        feedPage = (\r\n          <Navigator\r\n            posts={this.state.posts}\r\n            allSounds={this.state.allSounds}\r\n            fetchAllSounds={() => this.fetchAllSounds()}\r\n            createErrorMessage={(msg, type) =>\r\n              this.props.createErrorMessage(msg, type)\r\n            }\r\n            fetchAdditionalSounds={() => this.fetchAdditionalSounds()}\r\n            hasMore={this.state.hasMore}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        feedPage = <p>something wrong</p>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar}>\r\n        <Ons.Tabbar\r\n          onPreChange={({ index }) => this.setState({ index: index })}\r\n          onPostChange={() => console.log(\"postChange\")}\r\n          onReactive={() => console.log(\"postChange\")}\r\n          position=\"bottom\"\r\n          index={this.state.index}\r\n          renderTabs={(activeIndex, tabbar) => [\r\n            {\r\n              content: <Ons.Page key=\"Feed\">{feedPage}</Ons.Page>,\r\n              tab: <Ons.Tab label=\"Feed\" icon=\"fa-headphones\" key=\"FeedTab\" />\r\n            },\r\n            {\r\n              content: (\r\n                <Ons.Page key=\"Upload\">\r\n                  <Upload\r\n                    createErrorMessage={(message, type) =>\r\n                      this.props.createErrorMessage(message, type)\r\n                    }\r\n                    updateImagesFromUnsplash={keyWord =>\r\n                      this.updateImagesFromUnsplash(keyWord)\r\n                    }\r\n                  />\r\n                </Ons.Page>\r\n              ),\r\n              tab: (\r\n                <Ons.Tab label=\"Upload\" icon=\"fa-microphone\" key=\"UploadTab\" />\r\n              )\r\n            },\r\n            {\r\n              content: (\r\n                <Ons.Page key=\"Profile\">\r\n                  <Profile\r\n                    createErrorMessage={(message, type) =>\r\n                      this.props.createErrorMessage(message, type)\r\n                    }\r\n                  />\r\n                </Ons.Page>\r\n              ),\r\n              tab: <Ons.Tab label=\"Profile\" icon=\"fa-user\" key=\"ProfileTab\" />\r\n            }\r\n          ]}\r\n        />\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabContainer;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport CreateUser from \"./CreateUser\";\r\nimport Loading from \"./Loading\";\r\nimport TabContainer from \"./Containers/TabContainer\";\r\nimport ErrorPopUp from \"./Containers/ErrorPopUp\";\r\nimport ShowUsersPosts from \"./Containers/ShowUsersPosts\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorOccured: false,\r\n      errorMessage: \"\",\r\n      errorMessageType: \"\"\r\n    };\r\n    window.addEventListener(\"offline\", e => {\r\n      this.createErrorMessage(\r\n        \"No internet connection detected. \\nThe app won't function properly.\",\r\n        \"Toast\"\r\n      );\r\n    });\r\n  }\r\n\r\n  createErrorMessage(message, type) {\r\n    this.setState({\r\n      errorOccured: true,\r\n      errorMessage: message,\r\n      errorMessageType: type\r\n    });\r\n  }\r\n\r\n  cancelErrorMessage() {\r\n    this.setState({\r\n      errorOccured: false,\r\n      errorMessage: \"\",\r\n      errorMessageType: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <Route path=\"/\" exact component={Loading} />\r\n          <Route\r\n            path=\"/login\"\r\n            exact\r\n            render={props => (\r\n              <Login\r\n                {...props}\r\n                createErrorMessage={(message, type) =>\r\n                  this.createErrorMessage(message, type)\r\n                }\r\n                cancelErrorMessage={() => this.cancelErrorMessage()}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/create\"\r\n            exact\r\n            render={props => (\r\n              <CreateUser\r\n                {...props}\r\n                createErrorMessage={(message, type) =>\r\n                  this.createErrorMessage(message, type)\r\n                }\r\n                cancelErrorMessage={() => this.cancelErrorMessage()}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/TabContainer\"\r\n            render={props => (\r\n              <TabContainer\r\n                {...props}\r\n                createErrorMessage={(message, type) =>\r\n                  this.createErrorMessage(message, type)\r\n                }\r\n                cancelErrorMessage={() => this.cancelErrorMessage()}\r\n              />\r\n            )}\r\n          />\r\n          <ErrorPopUp\r\n            type={this.state.errorMessageType}\r\n            isOpen={this.state.errorOccured}\r\n            message={this.state.errorMessage}\r\n            onCancel={() => this.cancelErrorMessage()}\r\n          />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <Route path=\"/TabContainer\"\r\n//         \trender ={ () =>\r\n//         \t\t<TabContainer createErrorMessage = {() => this.createErrorMessage()} cancelErrorMessage = {() => this.cancelErrorMessage()} />\r\n//         \t}\r\n//     \t/>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport config from \"./secrets\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nfirebase.initializeApp(config.config);\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n    \t<App />\r\n  \t</HashRouter>\r\n\t, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}