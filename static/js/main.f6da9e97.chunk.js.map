{"version":3,"sources":["utils.js","Login.js","CreateUser.js","Loading.js","Containers/Feed.jsx","Containers/Profile.jsx","Containers/ErrorPopUp.jsx","Containers/Upload.jsx","secrets.js","Containers/TabContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["redirectWhenOAuthChanges","history","firebase","onAuthStateChanged","user","push","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInWithGoogle","signInWithPopup","then","result","token","credential","accessToken","console","log","catch","error","errorCode","code","errorMessage","message","email","createErrorMessage","signInWithFacebook","loginClicked","_this$state","state","password","signInWithEmailAndPassword","errorMsg","react_default","a","createElement","react_onsenui","className","_this2","renderToolbar","onSubmit","event","preventDefault","value","onChange","setState","target","modifier","float","placeholder","style","width","type","onClick","visibility","height","icon","href","Component","CreateUser","createClick","displayName","createUserWithEmailAndPassword","userCredentials","updateProfile","Start","Feed","foo","done","fetchAllSounds","onLoad","bind","pullHookState","size","spin","display","spinner","items","allSounds","map","element","i","renderItem","react_infinite_scroller_default","pageStart","loadMore","loadItems","initialLoad","hasMore","loader","key","useWindow","page","fetchAdditionalSounds","item","_this3","img","imgUrl","time","title","userName","src","alt","controls","onWaiting","handleAudioWaiting","url","Date","toDateString","toLocaleTimeString","renderPullHook","renderInfiniteScroller","Profile","signOut","upload","currentUser","ref","storageRef","child","file","document","querySelector","files","uploadText","name","metadata","contentType","put","snapshot","getDownloadURL","photoURL","test","image","checkmark","selectText","selectButtonContent","firebaseAuthListener","storage","db","_this4","renderProfileImage","requried","editProfileName","accept","id","htmlFor","ErrorPopUp","isOpen","onCancel","cancelable","toRet","renderAlertDialog","renderToast","toReturn","showError","Upload","componentDidMount","startRecording","record","startTimer","stopRecording","stopTimer","uploadRecording","audioBlob","keyword","validUserInput","uploading","uid","timeStamp","soundRef","updateImagesFromUnsplash","downloadURL","collection","add","isRecording","isPaused","onStop","assertThisInitialized","timer","setInterval","setTimeout","clearInterval","recordedBlob","blobURL","blob","length","match","recordButton","_this$state2","audioURL","color","es","onData","strokeColor","backgroundColor","class","rc_progress_es","percent","strokeWidth","secrets","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","unsplashApiKeys","access_key","secret_key","TabContainer","asyncToGenerator","regenerator_default","mark","_callee","usersFromDatabase","wrap","_context","prev","next","navigator","onLine","fetchAllUsers","sent","orderBy","limit","get","querySnapshot","forEach","doc","soundData","data","correctUser","find","status","lastKnownKey","t0","stop","_callee2","_context2","startAt","getAllUsers","users","err","unsplash","Unsplash","require","default","applicationId","secret","httpsCallable","index","posts","postedBy","keyWord","search","photos","unsplashResult","toJson","results","urls","thumb","_context3","feedPage","paddingTop","Containers_Feed","msg","onPreChange","_ref3","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","content","tab","label","Containers_Upload","Containers_Profile","App","errorOccured","errorMessageType","window","addEventListener","e","react_router_dom","react_router","path","exact","component","Loading","render","src_Login","assign","cancelErrorMessage","src_CreateUser","Containers_TabContainer","Containers_ErrorPopUp","Boolean","location","hostname","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6da9e97.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const redirectWhenOAuthChanges = history => {\r\n  firebase.auth().onAuthStateChanged(user => {\r\n    history.push(user ? \"/TabContainer\" : \"/login\");\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { redirectWhenOAuthChanges } from \"./utils\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport * as Ons from \"react-onsenui\";\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { email: \"\", password: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history)\r\n  }\r\n\r\n  signInWithGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then(function(result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with google!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Google-sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  signInWithFacebook = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then(function(result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with Facebook!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Facebook sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  loginClicked = () => {\r\n    const { email, password } = this.state;\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch(error => {\r\n        console.log(this.state.email);\r\n        let errorMsg = (\"Error logging in! \" + error.code + \" \" + error.message);\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n      });\r\n  };\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Welcome</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\r\n        <h1>Soundy</h1>\r\n          <form onSubmit = {(event) => {\r\n            event.preventDefault();\r\n            this.loginClicked();\r\n          }}>\r\n            <p>\r\n                <Ons.Input\r\n                  value={this.state.email}\r\n                  onChange={event => {\r\n                    this.setState({ email: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  float\r\n                  placeholder=\"Email\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.password}\r\n                  onChange={event => {\r\n                    this.setState({ password: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  type=\"password\"\r\n                  float\r\n                  placeholder=\"Password\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <br />\r\n              <p>\r\n                <Ons.Button\r\n                  onClick={this.loginClicked}\r\n                  modifier=\"underbar\"\r\n                  style={{ width: \"60vw\" }}\r\n                >\r\n                  Log in\r\n                </Ons.Button>\r\n              </p>\r\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\r\n          </form>\r\n        <br />\r\n        <p>\r\n          <Ons.Button\r\n            className=\".fb-google-button\"\r\n            modifier=\"underbar\"\r\n            style={{ width: \"60vw\" }}\r\n            onClick={this.signInWithGoogle}\r\n          >\r\n            <Ons.Icon icon=\"google\" /> Sign in with Google\r\n          </Ons.Button>\r\n        </p>\r\n        <p>\r\n          <Ons.Button\r\n            className=\".fb-google-button\"\r\n            modifier=\"underbar\"\r\n            style={{ width: \"60vw\" }}\r\n            onClick={this.signInWithFacebook}\r\n          >\r\n            <Ons.Icon icon=\"facebook\" /> Sign in with Facebook\r\n          </Ons.Button>\r\n        </p>\r\n        <a href='javascript:;' onClick={() => {this.props.history.push('/create')}}>Don't have an account? Click here</a>\r\n\r\n      </Ons.Page>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport * as Ons from \"react-onsenui\";\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nclass CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { email: \"\", displayName: \"\",password: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n  signInWithGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then(function(result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with google!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Google-sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Google. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  signInWithFacebook = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then(function(result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(\"Signed in with Facebook!\");\r\n        console.log(token);\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        console.log(\r\n          \"error with Facebook sign in: \" +\r\n            \"Message: \" +\r\n            errorMessage +\r\n            \"Code: \" +\r\n            errorCode +\r\n            \" email: \" +\r\n            email\r\n        );\r\n        let errorMsg = \"There was en error signing in with Facebook. See the log for detailed information.\";\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n        console.log(credential);\r\n      });\r\n  };\r\n\r\n  createClick = () => {\r\n    const { email, displayName, password } = this.state;\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        userCredentials.user.updateProfile({displayName: displayName})\r\n      })\r\n      .catch(error => {\r\n        console.log(this.state.email);\r\n        let errorMsg = (\"Error creating user! \" + error.code + \" \" + error.message);\r\n        this.props.createErrorMessage(errorMsg, \"Toast\");\r\n      });\r\n  };\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Welcome</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\r\n        <h1>Soundy</h1>\r\n          <form onSubmit = {(event) => {\r\n            event.preventDefault();\r\n            this.loginClicked();\r\n          }}>\r\n            <p>\r\n                <Ons.Input\r\n                  value={this.state.email}\r\n                  onChange={event => {\r\n                    this.setState({ email: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  float\r\n                  placeholder=\"Email\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.displayName}\r\n                  onChange={event => {\r\n                    this.setState({ displayName: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  float\r\n                  placeholder=\"Display Name\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.password}\r\n                  onChange={event => {\r\n                    this.setState({ password: event.target.value });\r\n                  }}\r\n                  modifier=\"underbar\"\r\n                  type=\"password\"\r\n                  float\r\n                  placeholder=\"Password\"\r\n                  style={{ width: \"80vw\" }}\r\n                />\r\n              </p>\r\n              <br />\r\n              \r\n              <p>\r\n                <Ons.Button\r\n                  onClick={this.createClick}\r\n                  modifier=\"underbar\"\r\n                  style={{ width: \"60vw\" }}\r\n                >\r\n                  Create Account\r\n                </Ons.Button>\r\n              </p>\r\n              <br />\r\n            <p>\r\n              <Ons.Button\r\n                className=\".fb-google-button\"\r\n                modifier=\"underbar\"\r\n                style={{ width: \"60vw\" }}\r\n                onClick={this.signInWithGoogle}\r\n              >\r\n                Create account with <Ons.Icon icon=\"google\" />\r\n              </Ons.Button>\r\n            </p>\r\n            <p>\r\n              <Ons.Button\r\n                className=\".fb-google-button\"\r\n                modifier=\"underbar\"\r\n                style={{ width: \"60vw\" }}\r\n                onClick={this.signInWithFacebook}\r\n              >\r\n                Create account with <Ons.Icon icon=\"facebook\" />\r\n              </Ons.Button>\r\n            </p>\r\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\r\n          </form>\r\n          <a href='javascript:;' onClick={() => {this.props.history.push('/login')}}>Already have an account? Click here</a>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { redirectWhenOAuthChanges } from \"./utils\";\r\n\r\nclass Start extends Component {\r\n  componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"App\">Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React, { Component } from \"react\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass Feed extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foo: true,\r\n    };\r\n  }\r\n\r\n  // called from PullHook when the action is performed\r\n  async onLoad(done) {\r\n    await this.props.fetchAllSounds();\r\n    // await setTimeout(() => done(), 3000);\r\n    // ^^^^ Kan användas för att testa hur olika laddningsalternativ ser ut.\r\n    done();\r\n  }\r\n\r\n  // Used to request a new database query\r\n  renderPullHook() {\r\n    return (\r\n      <Ons.PullHook\r\n        onChange={this.onChange}\r\n        onLoad={this.onLoad.bind(this)} // bind this (the Feed.jsx object) to be able to use its methods and attributes\r\n      >\r\n        {this.state.pullHookState === \"initial\" ? (\r\n          <span>\r\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-down-a\" />\r\n            Pull down to refresh\r\n          </span>\r\n        ) : this.state.pullHookState === \"preaction\" ? (\r\n          <span>\r\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-up-a\" />\r\n            Release to refresh\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <Ons.Icon\r\n              spin\r\n              icon=\"sync-alt\"\r\n              style={{ display: this.state.spinner }}\r\n            />\r\n          </span>\r\n        )}\r\n      </Ons.PullHook>\r\n    );\r\n  }\r\n\r\n  // https://www.npmjs.com/package/react-infinite-scroller\r\n  renderInfiniteScroller(){\r\n    let items = [];\r\n    this.props.allSounds.map((element, i) => {\r\n      items.push(this.renderItem(element));\r\n    })\r\n    return (\r\n      <InfiniteScroll\r\n        pageStart={0}\r\n        loadMore={ this.loadItems.bind(this) } \r\n        initialLoad = { false }   // undviker att ladda när elementet först skapas iom att vi redan har data\r\n        hasMore={this.props.hasMore}\r\n        loader= {<div className=\"loader\" key={0}>Loading ...</div>}\r\n        // threshold = {1000}     // <---- om man vill sätta anpassad gräns för när den uppdaterar\r\n        useWindow = {false}       // <---- MUY IMPORTANTE, annars känner den inte av scrollen\r\n      >\r\n        <div>\r\n          {items}\r\n        </div> \r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  // The function called from infiniteScroller when new items are to be loaded\r\n  loadItems (page) {\r\n    console.log(\"Loading more items from the database\");\r\n    this.props.fetchAdditionalSounds();\r\n  }\r\n\r\n  // Each element to be shown in the feed\r\n  renderItem(item) {\r\n    let img = item.imgUrl ? item.imgUrl : \"https://i.imgur.com/dBmYY4M.png\";    // old placeholder image \"https://i.imgur.com/hgyXyww.png\" \r\n    return (\r\n      <Ons.Card key={item.time}>\r\n        <p>{item.title}</p>\r\n        <p>Posted by: {item.userName}</p>\r\n        <center>\r\n          <img src = {img} alt = \"placeholderText\"/>\r\n          <audio controls onWaiting = {() => this.handleAudioWaiting()}>\r\n            <source src = {item.url}/>\r\n            <p>Your browser does not support audio. The file can be found at <a href = {item.url}>this link</a></p>  \r\n          </audio>     \r\n        </center>\r\n        <p>             \r\n          {new Date(item.time).toDateString()}{' '}\r\n          {new Date(item.time).toLocaleTimeString()}\r\n        </p>\r\n      </Ons.Card>\r\n    );\r\n  }\r\n\r\n  // Called if the audio player has to wait due to slow internet connection\r\n  handleAudioWaiting(){\r\n    this.props.createErrorMessage(\"Slow internet connection detected.\", \"Toast\");\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page>\r\n        {this.renderPullHook()}\r\n        {this.renderInfiniteScroller()}\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n      \r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\n//import { redirectWhenOAuthChanges } from \"../utils\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass Profile extends Component {\r\n\r\n  // behövde skriva om koden med en konstruktor för att få tillgång till props\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      name: null,\r\n      photoURL: null,\r\n      image: \"\",\r\n      checkmark: \"none\",\r\n      spinner: \"none\",\r\n      selectText: \"inherent\",\r\n      uploadText: \"inherent\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.firebaseAuthListener = firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({ currentUser: user });\r\n      }\r\n    });\r\n\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.firebaseAuthListener && this.firebaseAuthListener();\r\n  }\r\n\r\n  signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function() {\r\n        console.log(\"Signed out completed\");\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error when signing out\" + error);\r\n        this.props.createErrorMessage(\"Error when signing out. See log for more details\", \"AlertDialog\");\r\n      });\r\n  };\r\n\r\n  renderProfileImage() {\r\n    const currentUser = this.state.currentUser;\r\n    if (currentUser && currentUser.photoURL === null) {\r\n      return (\r\n        <img\r\n          src=\"https://t4.ftcdn.net/jpg/02/15/84/43/240_F_215844325_ttX9YiIIyeaR7Ne6EaLLjMAmy4GvPC69.jpg\"\r\n          alt=\"No Display Name\"\r\n          className=\"userPhoto\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          src={currentUser && currentUser.photoURL}\r\n          alt={currentUser && currentUser.displayName}\r\n          className=\"userPhoto\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  editProfileName() {\r\n    var user = firebase.auth().currentUser;\r\n    this.state.name !== null &&\r\n      user\r\n        .updateProfile({\r\n          displayName: this.state.name\r\n        })\r\n        .then(test => {\r\n          this.setState({ currentUser: user, name: null });\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error updating! \" + error.code + \" \" + error.message);\r\n          this.createErrorMessage(\"Error editing profile. See log for more details\", \"AlertDialog\");\r\n        });\r\n  }\r\n\r\n  upload = () => {\r\n    var user = firebase.auth().currentUser;\r\n    const ref = this.storageRef.child(\"profileImages\");\r\n    const file = document.querySelector(\"#photo\").files[0];\r\n    if (file) {\r\n      this.setState({ uploadText: \"none\", spinner: \"block\" });\r\n      const name = +new Date() + \"-\" + file.name;\r\n      const metadata = {\r\n        contentType: file.type\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then(snapshot => snapshot.ref.getDownloadURL())\r\n        .then(url => {\r\n          user\r\n            .updateProfile({\r\n              photoURL: url\r\n            })\r\n            .then(test => {\r\n              this.setState({\r\n                currentUser: user,\r\n                image: null,\r\n                checkmark: \"none\",\r\n                spinner: \"none\",\r\n                selectText: \"block\",\r\n                uploadText: \"block\"\r\n              });\r\n            })\r\n            .catch(function(error) {\r\n              // An error happened.\r\n              this.props.createErrorMessage(\"Error uploading profile image.\", \"AlertDialog\");\r\n            });\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  };\r\n\r\n\r\n  selectButtonContent = () => {\r\n    this.setState({ \r\n      checkmark: \"block\", \r\n      selectText: \"none\" \r\n    });\r\n  };\r\n\r\n  render() {\r\n    const currentUser = this.state.currentUser;\r\n    return (\r\n      <Ons.Page className=\"page\">\r\n        <div className=\"profilDetails\">\r\n          {this.renderProfileImage()}\r\n          <div className=\"profileName\">\r\n            <h2>{currentUser && currentUser.displayName}</h2>\r\n            <div>\r\n              <Ons.Button modifier=\"material\" onClick={this.signOut}>\r\n                Sign out <Ons.Icon icon=\"sign-out-alt\" />\r\n              </Ons.Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"editName\">\r\n          <Ons.Input\r\n            value={this.state.name}\r\n            onChange={event => {\r\n              this.setState({ name: event.target.value });\r\n            }}\r\n            modifier=\"underbar\"\r\n            float\r\n            placeholder=\"Update Name\"\r\n            className=\"updateName\"\r\n            requried\r\n          />\r\n          <Ons.Fab\r\n            className=\"saveButton\"\r\n            onClick={this.editProfileName.bind(this)}\r\n          >\r\n            <Ons.Icon icon=\"save\" />\r\n          </Ons.Fab>\r\n        </div>\r\n        <form>\r\n          <input\r\n            className=\"uploadImage\"\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image/*\"\r\n            id=\"photo\"\r\n            onChange={this.selectButtonContent}\r\n          />\r\n          <label htmlFor=\"photo\" className=\"uploadImage\">\r\n            <span style={{ display: this.state.selectText }}>Select Image</span>\r\n            <Ons.Icon icon=\"check\" style={{ display: this.state.checkmark }} />\r\n          </label>\r\n          <Ons.Button\r\n            modifier=\"material\"\r\n            onClick={this.upload}\r\n            className=\"uploadImage\"\r\n          >\r\n            <span style={{ display: this.state.uploadText }}>Upload</span>\r\n            <Ons.Icon\r\n              spin\r\n              icon=\"sync-alt\"\r\n              style={{ display: this.state.spinner }}\r\n            />\r\n          </Ons.Button>\r\n        </form>\r\n        <div className=\"your_posts\">\r\n          <p>Här kommer användarens posts</p>\r\n        </div>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nclass ErrorPopUp extends Component {\r\n  // inherits the posts to show from the TabContainer.jsx\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleCancel(){\r\n    console.log(\"clicked handleCancel\");\r\n  }\r\n\r\n  renderToast(){\r\n    return (\r\n        <Ons.Toast isOpen={this.props.isOpen}>\r\n          <div className=\"message\">\r\n            {this.props.message}\r\n          </div>\r\n          <button onClick={() => this.props.onCancel()}>\r\n            Dismiss\r\n          </button>\r\n        </Ons.Toast>\r\n      );\r\n  }\r\n\r\n  renderAlertDialog(){\r\n    return (\r\n      <Ons.AlertDialog isOpen={this.props.isOpen} onCancel={() => this.props.onCancel()} cancelable>\r\n       <div className=\"alert-dialog-title\">Warning!</div>\r\n       <div className=\"alert-dialog-content\">\r\n          {this.props.message}\r\n       </div>\r\n       <div className=\"alert-dialog-footer\">\r\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\r\n           Cancel\r\n         </button>\r\n         <button onClick={() => this.props.onCancel()} className=\"alert-dialog-button\">\r\n           Ok\r\n         </button>\r\n       </div>\r\n     </Ons.AlertDialog>\r\n    );\r\n  }\r\n\r\n  showError(){\r\n    let toRet;\r\n    switch(this.props.type){\r\n      case \"AlertDialog\":\r\n        toRet = this.renderAlertDialog();\r\n        break;\r\n      case \"Toast\":\r\n        toRet =  this.renderToast();\r\n        break;\r\n      default:\r\n        toRet = this.renderAlertDialog();\r\n        break;\r\n    }\r\n    return toRet;\r\n  }\r\n\r\n  render() {\r\n    let toReturn = this.showError();\r\n    return (<span>{toReturn}</span>)\r\n  }\r\n}\r\n\r\nexport default ErrorPopUp;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { ReactMic } from 'react-mic';\r\nimport { Line } from 'rc-progress';\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n//import * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nimport ErrorPopUp from \"./ErrorPopUp\";\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      record: false,\r\n      audioBlob: null,\r\n      isRecording: false,\r\n      isPaused: false,\r\n      title: \"\",\r\n      keyword: \"\",\r\n      time: 0,\r\n      uploading: false,\r\n    };\r\n    this.onStop = this.onStop.bind(this);\r\n  }\r\n\r\n  startTimer() {\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.state.time + 1\r\n    }), 1000);\r\n    setTimeout(this.stopRecording, 10000);\r\n  }\r\n\r\n  stopTimer() {\r\n    this.setState({time: 0});\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n  };\r\n\r\n  startRecording = () => {\r\n    this.setState({\r\n      record: true\r\n    });\r\n    this.startTimer();\r\n  };\r\n\r\n  stopRecording = () => {\r\n    this.setState({\r\n      record: false\r\n    });\r\n    console.log(this.state.time);\r\n    this.stopTimer();\r\n  };\r\n\r\n  onData(recordedBlob) {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  }\r\n\r\n  onStop(recordedBlob) {\r\n    this.setState({\r\n      blobURL: recordedBlob.blobURL,\r\n      audioBlob: recordedBlob.blob\r\n    });\r\n  }\r\n\r\n  validUserInput(){\r\n    if (!this.state.title || this.state.title.length === 0){\r\n      this.props.createErrorMessage(\"Please enter a title of your recording.\", \"Toast\");\r\n      return false;\r\n    }\r\n    else if(!this.state.keyword || !(this.state.keyword.match(/^[a-zA-Z0-9]+$/))){\r\n      this.props.createErrorMessage(\"You can only write one (1) keyword, use letters and/or numbers.\", \"Toast\");\r\n      return false;\r\n    } \r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  uploadRecording = () => {\r\n    const { audioBlob, title, keyword } = this.state;\r\n\r\n    if(!this.validUserInput()){\r\n      return;\r\n    }\r\n    if(!audioBlob){\r\n      this.props.createErrorMessage(\"A recording is required to be able to post to the Soundy feed.\", \"Toast\");\r\n      return;\r\n    }\r\n    \r\n    this.setState({uploading: true})\r\n    const { uid } = firebase.auth().currentUser;\r\n\r\n    \r\n    console.log(uid);\r\n    var timeStamp = +new Date();\r\n    var soundRef = this.storageRef.child('sounds/' + timeStamp);\r\n\r\n    this.props.updateImagesFromUnsplash(keyword)\r\n    .then((imgUrl) => {\r\n    soundRef\r\n      .put(audioBlob)\r\n      .then(snapshot => {\r\n        //It is now uploaded to storage\r\n        soundRef.getDownloadURL().then(downloadURL => { \r\n          this.db.collection('all-sounds').add({\r\n            //Add to database\r\n            url: downloadURL,\r\n            user: uid,\r\n            time: timeStamp,\r\n            title: title,\r\n            keyword: keyword,\r\n            imgUrl:imgUrl,\r\n          }).then(this.setState({uploading: false}));\r\n        });\r\n      })\r\n       // For some reason, the catch block below isn't reached when an error occures.\r\n       // Solved it by adding another type of check earlier in the function\r\n      .catch(error => {\r\n        console.log('ERROR: ' + error.message);\r\n        this.props.createErrorMessage(error.message, \"Toast\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { blobURL, audioURL, isRecording, isPaused, title, uploading } = this.state;\r\n    let recordButton;\r\n\r\n    switch(this.state.record){\r\n      case false:\r\n        recordButton = <ons-icon onClick={this.startRecording} \r\n                                 icon=\"fa-circle\" \r\n                                 size=\"30px\"\r\n                                 style={{color: \"red\"}}></ons-icon>;\r\n        break;\r\n      case true:\r\n        recordButton = <ons-icon onClick={this.stopRecording} \r\n                                 icon=\"fa-stop-circle\" \r\n                                 size=\"56px\"\r\n                                 style={{color: \"red\"}}></ons-icon>;\r\n        break;\r\n      default:\r\n        recordButton = <h1>Something is wrong</h1>;\r\n        break;\r\n    }\r\n    return (\r\n      <Ons.Page>\r\n        <ReactMic\r\n          record={this.state.record}\r\n          className=\"sound-wave\"\r\n          onStop={this.onStop}\r\n          onData={this.onData}\r\n          strokeColor=\"#4C78FB\"\r\n          backgroundColor=\"#000000\"\r\n        />\r\n        <div>\r\n              <ons-fab class=\"fab fab--material\">\r\n                {recordButton}\r\n              </ons-fab>\r\n        </div>\r\n        <br/>\r\n        <Line percent={this.state.time * 10} style={{width: \"80%\"}}strokeWidth=\"4\" strokeColor=\"#D3D3D3\" />\r\n        <p>{this.state.time} out of 10s</p>\r\n        <h2>Listen to your recording:</h2>\r\n        <div>\r\n          <audio ref=\"audioSource\" controls=\"controls\" src={blobURL} />\r\n        </div>\r\n        <div>\r\n          <Ons.Input\r\n            value={this.state.title}\r\n            onChange={event => {\r\n              this.setState({ title: event.target.value });\r\n            }}\r\n            modifier=\"material\"\r\n            float\r\n            placeholder=\"Title\"\r\n            style={{ width: \"80vw\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Ons.Input\r\n            value={this.state.keyword}\r\n            onChange={event => {\r\n              this.setState({ keyword: event.target.value });\r\n            }}\r\n            modifier=\"material\"\r\n            float\r\n            placeholder=\"Enter 1 keyword\"\r\n            style={{ width: \"80vw\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Ons.Button\r\n            modifier=\"material\"\r\n            onClick={this.uploadRecording}\r\n            className=\"uploadImage\"\r\n          >\r\n            <Ons.Icon\r\n              spin = {uploading}\r\n              icon={uploading ? \"sync-alt\" : \"fa-cloud-upload-alt\"}\r\n              style={{ display: this.state.spinner }}\r\n            />\r\n            \r\n            <span> Upload</span>\r\n\r\n          </Ons.Button>\r\n        </div>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAJZXBhqNSQG9VplYDMM-v0cADz10r16-M\",\r\n  authDomain: \"soundy-dm2518.firebaseapp.com\",\r\n  databaseURL: \"https://soundy-dm2518.firebaseio.com\",\r\n  projectId: \"soundy-dm2518\",\r\n  storageBucket: \"soundy-dm2518.appspot.com\",\r\n  messagingSenderId: \"431756069486\"\r\n};\r\n\r\nconst unsplashApiKeys = {\r\n\taccess_key: '2a745e3aed8f6d1704ea605cf1714be80d3fdf38fabf4e6c09a098b770cf97a6',\r\n\tsecret_key: '33be076d60849f65a6bf319f8b9631b63b4ca166ae5bdbf941cfb381960564e0'\r\n}\r\n\r\nexport default {config, unsplashApiKeys};","import React, { Component } from \"react\";\r\n\r\nimport { redirectWhenOAuthChanges } from \"../utils\";\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\n\r\nimport Feed from \"./Feed\";\r\nimport Profile from \"./Profile\";\r\nimport Upload from \"./Upload\";\r\n//import AudioTest from '../AudioRecorder/AudioTest';\r\n\r\n// imports for OnsenUI\r\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n// import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\r\n// Webpack CSS import\r\nimport \"onsenui/css/onsenui.css\";\r\nimport \"onsenui/css/onsen-css-components.css\";\r\n\r\nimport config from \"../secrets.js\";\r\n\r\n// ES Modules syntax\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\n\r\n// require syntax\r\n\r\nclass TabContainer extends Component {\r\n  // in the this.state.posts array we can save the results from our database queries\r\n  // these can then automatically be shown in Feed.jsx by passing the state as a prop\r\n  // By saving the data here we don't have to do a new API call every time we switch tabs\r\n  constructor(props) {\r\n    super(props);\r\n    // connecting to Unsplash to get images automatically\r\n    const Unsplash = require(\"unsplash-js\").default;\r\n    //console.log(config);\r\n    let unsplash = new Unsplash({\r\n      applicationId: config.unsplashApiKeys.access_key,\r\n      secret: config.unsplashApiKeys.secret_key\r\n    });\r\n\r\n    this.getAllUsers = firebase.functions().httpsCallable('getAllUsers');\r\n\r\n    this.state = {\r\n      currentUser: null,\r\n      index: 0,\r\n      posts: [\r\n        {\r\n          title: \"dog\",\r\n          postedBy: \"Herman\"\r\n        },\r\n        {\r\n          title: \"cat\",\r\n          postedBy: \"OtherUser\"\r\n        },\r\n        {\r\n          title: \"hat\",\r\n          postedBy: \"David\"\r\n        }\r\n      ],\r\n      unsplash: unsplash,\r\n      status: \"loading\",\r\n\r\n      // states for the audio recording\r\n      allSounds: [],\r\n      lastKnownKey:\"\",\r\n      hasMore:true,\r\n    };\r\n  }\r\n\r\n  // metod innehållandes kod vi kan använda när vi laddar in databasresultat?\r\n  // returns the promise of a JSON object containing information about a picture\r\n  // 50 requests per hour\r\n  async updateImagesFromUnsplash(keyWord) {\r\n    if (!keyWord) {\r\n      // default to something if no keywoard was supplied\r\n      return \"https://i.imgur.com/dBmYY4M.png\";\r\n    }\r\n\r\n    // Söker efter en bild matchande det sökord som ges\r\n    // Måste använda try-catch för att kunna fånga upp ifall API-queryn ger error\r\n    try {\r\n      let unsplashResult = await this.state.unsplash.search.photos(\r\n        keyWord,\r\n        1,\r\n        1\r\n      );\r\n      unsplashResult = await toJson(unsplashResult);\r\n      return unsplashResult.results[0].urls.thumb;\r\n    } catch (error) {\r\n      // Ifall vi får error ge nån default bild (t.ex. ifall vi uppnåt quota för unsplashAPI)\r\n      console.log(error);\r\n      return \"https://i.imgur.com/dBmYY4M.png\";\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    redirectWhenOAuthChanges(this.props.history);\r\n\r\n    // kopplar upp till databasen\r\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\r\n    this.storageRef = storage.ref();\r\n    this.db = firebase.firestore();\r\n    this.fetchAllSounds();\r\n  }\r\n\r\n  // Anropar databasen och sparar alla query-resultat i this.state\r\n  // Keeps track of the last item in the allSounds array by saving it to state\r\n  fetchAllSounds = async () => {\r\n    if(navigator.onLine){\r\n      const usersFromDatabase = await this.fetchAllUsers()\r\n      var allSounds = [];\r\n      try{\r\n        await this.db\r\n        .collection('all-sounds')\r\n        .orderBy('time', 'desc')\r\n        .limit(10)\r\n        .get()\r\n        .then(querySnapshot => {\r\n          querySnapshot.forEach(doc => {\r\n            let soundData = doc.data()\r\n            const correctUser = usersFromDatabase.find(user => user.uid === soundData.user)\r\n            soundData.userName = correctUser ? correctUser.displayName : \"-\"\r\n            soundData.photoURL = correctUser ? correctUser.photoURL : null\r\n            allSounds.push(soundData);\r\n          })})\r\n        .then(() => \r\n          this.setState({ \r\n            allSounds: allSounds,\r\n            status:\"loaded\",\r\n          }, () => this.setState({\r\n            lastKnownKey: this.state.allSounds[this.state.allSounds.length-1].time,            \r\n          }))\r\n        )\r\n        .catch(error => {\r\n          this.props.createErrorMessage(\"Error when fetching new sounds. See the log for more details\", \"Toast\");\r\n          console.log(error);\r\n        });\r\n      } catch(err){\r\n        this.props.createErrorMessage(err, \"Toast\");\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\r\n    }\r\n  };\r\n\r\n  // Slightly different version of the one above.\r\n  // Fetches new posts from the database, starting from the last time-ID currently loaded.\r\n  // Excludes the last one currently shown so as not to create duplicates\r\n  // Keeps track of the last item in the allSounds array by saving it to state\r\n  fetchAdditionalSounds = async () => {\r\n    if(navigator.onLine){\r\n        const usersFromDatabase = await this.fetchAllUsers()\r\n        var allSounds = this.state.allSounds;\r\n        try{\r\n          await this.db\r\n          .collection('all-sounds')\r\n          .orderBy('time', 'desc')\r\n          .startAt(this.state.lastKnownKey)\r\n          .limit(10)\r\n          .get()\r\n          .then(querySnapshot => {\r\n            if (querySnapshot.size === 1) {\r\n              // ifall vi bara får ett resultat innebär det att det inte finns mer att ladda\r\n              this.setState({\r\n                hasMore:false,\r\n              });\r\n              this.props.createErrorMessage(\"No more posts available.\", \"Toast\");\r\n            }\r\n            querySnapshot.forEach(doc => {\r\n              let soundData = doc.data()\r\n              const correctUser = usersFromDatabase.find(user => user.uid === soundData.user)\r\n              soundData.userName = correctUser ? correctUser.displayName : \"-\"\r\n              soundData.photoURL = correctUser ? correctUser.photoURL : null\r\n            if (soundData.time !== this.state.lastKnownKey) {\r\n              allSounds.push(soundData);\r\n            }\r\n          })})\r\n        .then(() => \r\n          this.setState({ \r\n            allSounds: allSounds,\r\n            status:\"loaded\",\r\n          }, () => this.setState({\r\n            lastKnownKey: this.state.allSounds[this.state.allSounds.length-1].time,            \r\n          }))\r\n        )\r\n        .catch(error => {\r\n          this.props.createErrorMessage(\"Error when fetching new sounds. See the log for more details\", \"Toast\");\r\n          console.log(error);\r\n        });\r\n        } catch(err){\r\n          this.props.createErrorMessage(err, \"Toast\");\r\n          console.log(err);\r\n        }\r\n      } else {\r\n        this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\r\n      }\r\n    };    \r\n\r\n  fetchAllUsers = () => {\r\n    return this.getAllUsers().then(result => {\r\n      return result.data.users\r\n    }).catch(err => {\r\n      return []\r\n    })\r\n  }\r\n\r\n  // logga-ut knapp\r\n  signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function() {\r\n        console.log(\"Signed out completed\");\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error when signing out' + error);\r\n        this.props.createErrorMessage(\"Error when signing out \" + error, \"Toast\");\r\n        });\r\n    }\r\n\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"center\">Soundy</div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // Visar bara posts ifall allt laddat klart. Kan med fördel användas till ljud-filerna\r\n    let feedPage;\r\n    switch (this.state.status) {\r\n      case \"loading\":\r\n        feedPage =\r\n        <div style={{'paddingTop':'50%'}}>\r\n          <Ons.Icon\r\n            spin\r\n            icon=\"sync-alt\"\r\n          />\r\n        </div>;\r\n        break;\r\n      case \"loaded\":\r\n        feedPage = <Feed \r\n                      posts = {this.state.posts}\r\n                      allSounds = {this.state.allSounds}\r\n                      fetchAllSounds = {() => this.fetchAllSounds()}\r\n                      createErrorMessage = {(msg, type) => this.props.createErrorMessage(msg, type)}\r\n                      fetchAdditionalSounds = {() => this.fetchAdditionalSounds()}\r\n                      hasMore = {this.state.hasMore}\r\n                    />\r\n\r\n        break;\r\n      default:\r\n        feedPage = <p>something wrong</p>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar}>\r\n        <Ons.Tabbar\r\n          onPreChange={({ index }) => this.setState({ index: index })}\r\n          onPostChange={() => console.log(\"postChange\")}\r\n          onReactive={() => console.log(\"postChange\")}\r\n          position=\"bottom\"\r\n          index={this.state.index}\r\n          renderTabs={(activeIndex, tabbar) => [\r\n            {\r\n              content: <Ons.Page key=\"Feed\">{feedPage}</Ons.Page>,\r\n              tab: <Ons.Tab label=\"Feed\" icon=\"fa-headphones\" key=\"FeedTab\" />\r\n            },\r\n            {\r\n              content: (\r\n                <Ons.Page key=\"Upload\">\r\n                  <Upload \r\n                    createErrorMessage = {(message, type) => this.props.createErrorMessage(message, type)}\r\n                    updateImagesFromUnsplash = {(keyWord) => this.updateImagesFromUnsplash(keyWord)}\r\n                  />\r\n                </Ons.Page>\r\n              ),\r\n              tab: (\r\n                <Ons.Tab label=\"Upload\" icon=\"fa-microphone\" key=\"UploadTab\" />\r\n              )\r\n            },\r\n            {\r\n              content: (\r\n                <Ons.Page key=\"Profile\">\r\n                  <Profile \r\n                    createErrorMessage = {(message, type) => this.props.createErrorMessage(message, type)}\r\n                  />\r\n                </Ons.Page>\r\n              ),\r\n              tab: <Ons.Tab label=\"Profile\" icon=\"fa-user\" key=\"ProfileTab\" />\r\n            }\r\n          ]}\r\n        />\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabContainer;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport CreateUser from './CreateUser'\r\nimport Loading from \"./Loading\";\r\nimport TabContainer from \"./Containers/TabContainer\";\r\nimport ErrorPopUp from \"./Containers/ErrorPopUp\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n  \tsuper(props);\r\n  \tthis.state = {\r\n\t  errorOccured:false,\r\n      errorMessage:\"\",\r\n      errorMessageType:\"\",\r\n  \t}\r\n  \twindow.addEventListener(\"offline\",(e) =>  {\r\n    \tthis.createErrorMessage(\"No internet connection detected. \\nThe app won't function properly.\", \"Toast\");\r\n\t});\r\n  }\r\n\r\n  createErrorMessage(message, type){\r\n  \tthis.setState({\r\n  \t\terrorOccured:true,\r\n  \t\terrorMessage:message,\r\n  \t\terrorMessageType:type,\r\n  \t});\r\n  }\r\n\r\n  cancelErrorMessage(){\r\n  \tthis.setState({\r\n  \t\terrorOccured:false,\r\n  \t\terrorMessage:\"\",\r\n  \t\terrorMessageType:\"\",\r\n  \t})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" exact component={Loading} />\r\n        <Route path=\"/login\" exact \r\n\t        render ={(props) => <Login {...props}  \r\n        \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \r\n        \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\r\n        \t\t\t\t\t\t/>}\r\n        />\r\n\t\t\t\t<Route path=\"/create\" exact \r\n\t        render ={(props) => <CreateUser {...props}  \r\n        \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \r\n        \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\r\n        \t\t\t\t\t\t/>}\r\n        />\r\n        \r\n        <Route path=\"/TabContainer\" \r\n        \trender ={ (props) => <TabContainer {...props}  \r\n        \t\t\t\t\t\t\tcreateErrorMessage = {(message, type) => this.createErrorMessage(message, type)} \r\n        \t\t\t\t\t\t\tcancelErrorMessage = {() => this.cancelErrorMessage()}\r\n        \t\t\t\t\t\t\t/>}\r\n        />\r\n\t    <ErrorPopUp \r\n\t      type = {this.state.errorMessageType}\r\n\t      isOpen = {this.state.errorOccured} \r\n\t      message = {this.state.errorMessage}\r\n\t      onCancel = {() => this.cancelErrorMessage()}\r\n\t    />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <Route path=\"/TabContainer\" \r\n//         \trender ={ () => \r\n//         \t\t<TabContainer createErrorMessage = {() => this.createErrorMessage()} cancelErrorMessage = {() => this.cancelErrorMessage()} /> \r\n//         \t}\r\n//     \t/>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport config from \"./secrets\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nfirebase.initializeApp(config.config);\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n    \t<App />\r\n  \t</HashRouter>\r\n\t, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}