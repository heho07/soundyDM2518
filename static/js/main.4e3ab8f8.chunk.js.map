{"version":3,"sources":["utils.js","Login.js","CreateUser.js","Loading.js","Components/ImageSoundPlayer.jsx","Containers/ShowUsersPosts.jsx","Containers/Feed.jsx","Containers/Profile.jsx","Containers/Upload.jsx","secrets.js","Containers/TabContainer.jsx","Containers/ErrorPopUp.jsx","ResetPassword.jsx","App.js","serviceWorker.js","index.js"],"names":["redirectWhenOAuthChanges","history","firebase","onAuthStateChanged","user","push","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInWithGoogle","signInWithPopup","then","result","credential","accessToken","catch","error","errorCode","code","errorMessage","message","email","console","log","createErrorMessage","signInWithFacebook","loginClicked","_this$state","state","password","signInWithEmailAndPassword","errorMsg","_this2","react_default","a","createElement","react_onsenui","className","id","src","alt","onSubmit","event","preventDefault","value","onChange","setState","target","type","modifier","float","placeholder","style","width","onClick","visibility","height","icon","href","marginTop","Component","CreateUser","createClick","displayName","createUserWithEmailAndPassword","userCredentials","updateProfile","Start","ImageSoundPlayer","soundClick","playing","refToSound","pause","play","item","img","imgUrl","key","time","photoURL","pushPage","uid","userName","userImage","opacity","ref","x","onWaiting","handleAudioWaiting","url","title","keyword","lib_default","date","Date","ShowUsersPosts","getUsersPost","db","collection","where","get","querySnapshot","posts","forEach","doc","documentData","data","sort","b","listOfPosts","hasFetched","showDeletePostConfirmation","post","index","ons","confirm","selected","deletePost","showSpinnerOnButton","forceUpdate","storageUri","removeOnePost","completed","httpsCallable","nextProps","nextState","map","shouldShowDeleteButton","spin","_this3","renderListItems","Feed","foo","done","fetchAllSounds","onLoad","bind","pullHookState","size","display","spinner","that","items","allSounds","element","i","Components_ImageSoundPlayer","react_infinite_scroller_default","pageStart","loadMore","loadItems","initialLoad","hasMore","loader","useWindow","page","fetchAdditionalSounds","renderPullHook","renderInfiniteScroller","Navigator","route","navigator","component","Feed_Feed","assign","userID","textAlign","popPage","Containers_ShowUsersPosts","hasBackButton","swipeable","renderPage","initialRoute","Profile","signOut","showRemoveAccountConfirmation","removeAccount","deletingUser","currentUser","removeUser","upload","storageRef","child","file","document","querySelector","files","uploadText","name","metadata","contentType","put","snapshot","getDownloadURL","test","image","checkmark","selectText","selectButtonContent","firebaseAuthListener","storage","_this4","paddingTop","fontSize","renderProfileImage","requried","editProfileName","accept","htmlFor","Upload","componentDidMount","startRecording","record","startTimer","stopRecording","stopTimer","uploadRecording","audioBlob","validUserInput","uploading","timeStamp","updateImagesFromUnsplash","add","soundDocumentRef","filePath","fileSnapshot","update","fullPath","blobURL","changeTabContainerIndex","isRecording","isPaused","onStop","assertThisInitialized","timer","setInterval","setTimeout","clearInterval","recordedBlob","blob","length","match","recordButton","_this$state2","color","es","onData","strokeColor","backgroundColor","class","rc_progress_es","percent","strokeWidth","controls","onKeyPress","which","secrets","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","unsplashApiKeys","access_key","secret_key","TabContainer","asyncToGenerator","regenerator_default","mark","_callee","usersFromDatabase","wrap","_context","prev","next","onLine","fetchAllUsers","sent","orderBy","limit","soundData","correctUser","find","status","lastKnownKey","t0","stop","_callee2","_context2","startAt","getAllUsers","users","err","unsplash","Unsplash","require","default","applicationId","secret","postedBy","keyWord","search","photos","unsplashResult","toJson","results","urls","thumb","_context3","num","feedPage","Containers_Feed","msg","renderToolbar","onPreChange","_ref3","onPostChange","onReactive","position","renderTabs","activeIndex","tabbar","content","tab","label","Containers_Upload","Containers_Profile","ErrorPopUp","isOpen","onCancel","cancelable","toRet","renderAlertDialog","renderToast","toReturn","showError","ResetPassword","resetPassword","auth","emailAddress","sendPasswordResetEmail","App","errorOccured","errorMessageType","window","addEventListener","e","react_router","path","exact","Loading","render","src_Login","cancelErrorMessage","src_CreateUser","Containers_TabContainer","src_ResetPassword","Containers_ErrorPopUp","Boolean","location","hostname","ReactDOM","react_router_dom","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e3ab8f8.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport const redirectWhenOAuthChanges = history => {\n  firebase.auth().onAuthStateChanged(user => {\n    history.push(user ? \"/TabContainer\" : \"/login\");\n  });\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { redirectWhenOAuthChanges } from \"./utils\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport * as Ons from \"react-onsenui\";\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { email: \"\", password: \"\" };\n  }\n\n  componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history);\n  }\n\n  signInWithGoogle = () => {\n    firebase\n      .auth()\n      .signInWithPopup(googleProvider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        //console.log(\"Signed in with google!\");\n        //console.log(token);\n        //console.log(user);\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Google-sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg =\n          \"There was en error signing in with Google. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  signInWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(facebookProvider)\n      .then(function(result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        //console.log(\"Signed in with Facebook!\");\n        //console.log(token);\n        //console.log(user);\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Facebook sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg =\n          \"There was en error signing in with Facebook. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  loginClicked = () => {\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        //console.log(this.state.email);\n        let errorMsg = \"Error logging in! \" + error.code + \" \" + error.message;\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n      });\n  };\n\n  render() {\n    return (\n      <Ons.Page className=\"page\">\n        <img id=\"logoStartscreen\" src=\"logo.png\" alt=\"Soundy's logotype\" />\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            this.loginClicked();\n          }}\n        >\n          <p>\n            <Ons.Input\n              value={this.state.email}\n              onChange={event => {\n                this.setState({ email: event.target.value });\n              }}\n              type=\"email\"\n              modifier=\"underbar\"\n              float\n              placeholder=\"Email\"\n              style={{ width: \"80vw\" }}\n            />\n          </p>\n          <p>\n            <Ons.Input\n              value={this.state.password}\n              onChange={event => {\n                this.setState({ password: event.target.value });\n              }}\n              modifier=\"underbar\"\n              type=\"password\"\n              float\n              placeholder=\"Password\"\n              style={{ width: \"80vw\" }}\n            />\n          </p>\n          <div className=\"border\" />\n          <p>\n            <Ons.Button\n              onClick={this.loginClicked}\n              modifier=\"underbar\"\n              style={{ width: \"60vw\" }}\n            >\n              Log in\n            </Ons.Button>\n          </p>\n          <input\n            type=\"submit\"\n            style={{ visibility: \"hidden\", height: 0, width: 0 }}\n          />\n        </form>\n\n        <p>\n          <Ons.Button\n            className=\".fb-google-button\"\n            modifier=\"underbar\"\n            style={{ width: \"60vw\" }}\n            onClick={this.signInWithGoogle}\n          >\n            <Ons.Icon icon=\"google\" /> Sign in with Google\n          </Ons.Button>\n        </p>\n        <p>\n          <Ons.Button\n            className=\".fb-google-button\"\n            modifier=\"underbar\"\n            style={{ width: \"60vw\" }}\n            onClick={this.signInWithFacebook}\n          >\n            <Ons.Icon icon=\"facebook\" /> Sign in with Facebook\n          </Ons.Button>\n        </p>\n        <br />\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            this.props.history.push(\"/create\");\n          }}\n        >\n          Don't have an account? Click here\n        </a>\n\n        <p style = {{marginTop:\"2em\"}} ><a href = 'javascript:;' onClick = {() => this.props.history.push('resetpassword')}>Forgot your password? Click here</a></p>\n\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport * as Ons from \"react-onsenui\";\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { email: \"\", displayName: \"\", password: \"\" };\n  }\n\n  componentDidMount() {}\n\n  signInWithGoogle = () => {\n    firebase\n      .auth()\n      .signInWithPopup(googleProvider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        //console.log(\"Signed in with google!\");\n        //console.log(token);\n        //console.log(user);\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Google-sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg =\n          \"There was en error signing in with Google. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  signInWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(facebookProvider)\n      .then(function(result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        //console.log(\"Signed in with Facebook!\");\n        //console.log(token);\n        //console.log(user);\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(\n          \"error with Facebook sign in: \" +\n            \"Message: \" +\n            errorMessage +\n            \"Code: \" +\n            errorCode +\n            \" email: \" +\n            email\n        );\n        let errorMsg =\n          \"There was en error signing in with Facebook. See the log for detailed information.\";\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n        console.log(credential);\n      });\n  };\n\n  createClick = () => {\n    const { email, displayName, password } = this.state;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        userCredentials.user.updateProfile({ displayName: displayName });\n      })\n      .catch(error => {\n        //console.log(this.state.email);\n        let errorMsg =\n          \"Error creating user! \" + error.code + \" \" + error.message;\n        this.props.createErrorMessage(errorMsg, \"Toast\");\n      });\n  };\n\n  render() {\n    return (\n      <Ons.Page className=\"page\">\n        <img id=\"logoStartscreen\" src=\"logo.png\" alt=\"Soundy's logotype\" />\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            this.loginClicked();\n          }}\n        >\n          <p>\n            <Ons.Input\n              value={this.state.email}\n              onChange={event => {\n                this.setState({ email: event.target.value });\n              }}\n              modifier=\"underbar\"\n              type=\"email\"\n              float\n              placeholder=\"Email\"\n              style={{ width: \"80vw\" }}\n            />\n          </p>\n          <p>\n            <Ons.Input\n              value={this.state.password}\n              onChange={event => {\n                this.setState({ password: event.target.value });\n              }}\n              modifier=\"underbar\"\n              type=\"password\"\n              float\n              placeholder=\"Password\"\n              style={{ width: \"80vw\" }}\n            />\n          </p>\n          <p>\n            <Ons.Input\n              value={this.state.displayName}\n              onChange={event => {\n                this.setState({ displayName: event.target.value });\n              }}\n              modifier=\"underbar\"\n              float\n              placeholder=\"Display Name\"\n              style={{ width: \"80vw\" }}\n            />\n          </p>\n\n          <br />\n\n          <p>\n            <Ons.Button\n              onClick={this.createClick}\n              modifier=\"underbar\"\n              style={{ width: \"60vw\" }}\n            >\n              Create Account\n            </Ons.Button>\n          </p>\n          <br />\n          <p>\n            <Ons.Button\n              className=\".fb-google-button\"\n              modifier=\"underbar\"\n              style={{ width: \"60vw\" }}\n              onClick={this.signInWithGoogle}\n            >\n              Create account with <Ons.Icon icon=\"google\" />\n            </Ons.Button>\n          </p>\n          <p>\n            <Ons.Button\n              className=\".fb-google-button\"\n              modifier=\"underbar\"\n              style={{ width: \"60vw\" }}\n              onClick={this.signInWithFacebook}\n            >\n              Create account with <Ons.Icon icon=\"facebook\" />\n            </Ons.Button>\n          </p>\n          <input\n            type=\"submit\"\n            style={{ visibility: \"hidden\", height: 0, width: 0 }}\n          />\n        </form>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            this.props.history.push(\"/login\");\n          }}\n        >\n          Already have an account? Click here\n        </a>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default CreateUser;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { redirectWhenOAuthChanges } from \"./utils\";\n\nclass Start extends Component {\n  componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history);\n  }\n\n  render() {\n    return <div className=\"App\">Loading...</div>;\n  }\n}\n\nexport default Start;\n","import React, { Component } from \"react\";\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport TimeAgo from \"react-timeago\";\n//import frenchStrings from 'react-timeago/lib/language-strings/fr'\n//import buildFormatter from \"react-timeago/lib/formatters/buildFormatter\";\n\nclass ImageSoundPlayer extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false\n    };\n    this.refToSound = {};\n  }\n\n  soundClick = () => {\n    if (!this.state.playing) {\n      this.refToSound.play();\n      this.setState({ playing: true });\n    } else {\n      this.refToSound.pause();\n      this.setState({ playing: false });\n    }\n  };\n\n  // Each element to be shown in the feed\n  renderItem(item) {}\n\n  // Called if the audio player has to wait due to slow internet connection\n  handleAudioWaiting() {\n    this.props.createErrorMessage(\n      \"Slow internet connection detected.\",\n      \"Toast\"\n    );\n  }\n\n  render() {\n    const item = this.props.item;\n    const { playing } = this.state;\n    let img = item.imgUrl ? item.imgUrl : \"https://i.imgur.com/dBmYY4M.png\"; // old placeholder image \"https://i.imgur.com/hgyXyww.png\"\n    return (\n      <Ons.Card key={item.time}>\n        <div>\n          <img\n            src={item.photoURL}\n            onClick={() => this.props.pushPage({uid:item.user, userName:item.userName, userImage:item.photoURL})}\n            className=\"profile-image-feed img-circle\"\n            alt=\"profile\"\n          />\n          <b onClick={() => this.props.pushPage({uid:item.user, userName:item.userName, userImage:item.photoURL})}>{item.userName}</b>\n        </div>\n        <div className=\"imageButtonContainer\">\n          <img src={img} style={{ width: \"100%\" }} alt=\"placeholderText\" />\n          <button\n            className=\"btn\"\n            style={{ opacity: \"0.8\" }}\n            onClick={() => this.soundClick()}\n          >\n            <ons-icon icon={playing ? \"pause\" : \"play\"} />\n          </button>\n        </div>\n        <audio\n          ref={x => {\n            this.refToSound = x;\n          }}\n          onWaiting={() => this.handleAudioWaiting()}\n        >\n          <source src={item.url} />\n          <p>\n            Your browser does not support audio. The file can be found at{\" \"}\n            <a href={item.url}>this link</a>\n          </p>\n        </audio>\n        <center>\n          <h4>\n            {item.title} <i>#{item.keyword}</i>\n          </h4>\n        </center>\n        <p>\n          Posted <TimeAgo date={new Date(item.time)} />\n        </p>\n      </Ons.Card>\n    );\n  }\n}\n\nexport default ImageSoundPlayer;\n","import React, { Component } from \"react\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass ShowUsersPosts extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasFetched: false,\n      listOfPosts: []\n    };\n    this.removeOnePost = firebase.functions().httpsCallable(\"removeOnePost\");\n  }\n\n  componentDidMount() {\n    this.db = firebase.firestore();\n    if (this.props.user) {\n      console.log(this.props.user);\n      this.getUsersPost(this.props.user);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.hasFetched) {\n      return true;\n    } else {\n      if (nextProps.user) {\n        this.getUsersPost(nextProps.user);\n        return false;\n      }\n      return true;\n    }\n  }\n\n  getUsersPost = user => {\n    const { uid } = user;\n    let postsFromUser = this.db\n      .collection(\"all-sounds\")\n      .where(\"user\", \"==\", uid);\n    postsFromUser.get().then(querySnapshot => {\n      let posts = [];\n      querySnapshot.forEach(doc => {\n        let documentData = doc.data();\n        documentData.id = doc.id;\n        posts.push(documentData);\n\n        //Lägg till de promise man får i en lista\n      });\n      posts.sort((a, b) => {\n        return b.time - a.time;\n      });\n      this.setState({ listOfPosts: posts, hasFetched: true });\n    });\n  };\n\n  showDeletePostConfirmation = (post, index) => {\n    ons.notification\n      .confirm(\"Are you sure you want to delete this post?\")\n      .then(selected => {\n        //Selected is 1 for OK and 0 for Cancel\n        if (selected) {\n          this.deletePost(post, index);\n        }\n      });\n  };\n\n  deletePost = (post, index) => {\n    //Delete post\n    post.showSpinnerOnButton = true;\n    this.state.listOfPosts[index].showSpinnerOnButton = true;\n    this.forceUpdate();\n    const { id, storageUri } = post;\n    this.removeOnePost({ id, storageUri }).then(result => {\n      if (result.data.completed) {\n        this.setState({ hasFetched: false });\n      }\n    });\n  };\n\n  renderListItems() {\n    return this.state.listOfPosts.map((post, index) => (\n      <Ons.ListItem key={post.time}>\n        <div className=\"left\">\n          <img\n            src={post.imgUrl}\n            className=\"list-item__thumbnail\"\n            alt=\"thumbnail\"\n          />\n        </div>\n        <div className=\"center\">\n          <strong>\n            {post.title}\n            <i> #{post.keyword}</i>\n          </strong>\n        </div>\n\n        {this.props.shouldShowDeleteButton && (\n          <div className=\"right\">\n            <Ons.Fab\n              onClick={() => this.showDeletePostConfirmation(post, index)}\n              className=\"squareButton\"\n            >\n              <Ons.Icon\n                spin={!!post.showSpinnerOnButton}\n                icon={post.showSpinnerOnButton ? \"spinner\" : \"trash\"}\n              />\n            </Ons.Fab>\n          </div>\n        )}\n      </Ons.ListItem>\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        <Ons.Fab\n          className=\"squareButton\"\n          onClick={() => this.setState({hasFetched: false})}\n          >\n        <Ons.Icon icon=\"sync\" />\n        </Ons.Fab>\n        <div className=\"userList\">\n          <Ons.List>{this.renderListItems()}</Ons.List>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowUsersPosts;\n","import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nimport ImageSoundPlayer from \"../Components/ImageSoundPlayer\";\n\nimport ShowUsersPosts from \"./ShowUsersPosts\";\n\nclass Feed extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: true\n    };\n  }\n\n  // called from PullHook when the action is performed\n  async onLoad(done) {\n    await this.props.fetchAllSounds();\n    // await setTimeout(() => done(), 3000);\n    // ^^^^ Kan användas för att testa hur olika laddningsalternativ ser ut.\n    done();\n  }\n\n  // Used to request a new database query\n  renderPullHook() {\n    return (\n      <Ons.PullHook\n        onChange={this.onChange}\n        onLoad={this.onLoad.bind(this)} // bind this (the Feed.jsx object) to be able to use its methods and attributes\n      >\n        {this.state.pullHookState === \"initial\" ? (\n          <span>\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-down-a\" />\n            Pull down to refresh\n          </span>\n        ) : this.state.pullHookState === \"preaction\" ? (\n          <span>\n            <Ons.Icon size={35} spin={false} icon=\"ion-arrow-up-a\" />\n            Release to refresh\n          </span>\n        ) : (\n          <span>\n            <Ons.Icon\n              spin\n              icon=\"sync-alt\"\n              style={{ display: this.state.spinner }}\n            />\n          </span>\n        )}\n      </Ons.PullHook>\n    );\n  }\n\n  // https://www.npmjs.com/package/react-infinite-scroller\n  renderInfiniteScroller(that) {\n    //  console.log(that);\n    let items = [];\n    this.props.allSounds.map((element, i) => {\n      items.push(\n        <ImageSoundPlayer\n          item={element}\n          key={element.id}\n          createErrorMessage={this.props.createErrorMessage}\n          pushPage={user => this.props.pushPage(user)}\n        />\n      );\n    });\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={this.loadItems.bind(this)}\n        initialLoad={false} // undviker att ladda när elementet först skapas iom att vi redan har data\n        hasMore={this.props.hasMore}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n        // threshold = {1000}     // <---- om man vill sätta anpassad gräns för när den uppdaterar\n        useWindow={false} // <---- MUY IMPORTANTE, annars känner den inte av scrollen\n      >\n        <div>{items}</div>\n      </InfiniteScroll>\n    );\n  }\n\n  // The function called from infiniteScroller when new items are to be loaded\n  loadItems(page) {\n    //console.log(\"Loading more items from the database\");\n    this.props.fetchAdditionalSounds();\n  }\n\n  render() {\n    return (\n      <Ons.Page>\n        {this.renderPullHook()}\n        {this.renderInfiniteScroller()}\n      </Ons.Page>\n    );\n  }\n}\n\n//  en klass som antingen visar Feed eller ShowUsersPost\nclass Navigator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderPage(route, navigator) {\n    switch (route.component.uid) {\n      case \"Feed\":\n        // skickar med alla props till Feed samt även hur den kan nå ShowUsersPosts\n        return (\n          <Feed\n            key={route.component.uid}\n            {...this.props}\n            pushPage={userID => this.pushPage(navigator, userID)}\n          />\n        );\n\n      default:\n        // om route inte är Feed så antas det att det är ett user ID och försöker visa detta.\n        return (\n          <Ons.Page key={route.component.uid}>\n            <div style = {{textAlign:\"left\"}} >\n              <Ons.BackButton onClick = {() => navigator.popPage()} >go back</Ons.BackButton>\n              <img\n                src={route.component.userImage}\n                className=\"profile-image-feed img-circle\"\n                alt=\"profile\"\n              />\n              <h2 style = {{display:\"inline-block\"}} >{route.component.userName}</h2>\n            </div>\n            <ShowUsersPosts\n              user={route.component}\n              shouldShowDeleteButton={false}\n            />\n          </Ons.Page>\n        );\n    }\n  }\n\n  // lägger till en route i navigatorns stack\n  pushPage(navigator, route) {\n    navigator.pushPage({ component: route, hasBackButton: true });\n  }\n\n  render() {\n    return (\n      <Ons.Page>\n        <Ons.Navigator\n          swipeable\n          renderPage={this.renderPage.bind(this)}\n          initialRoute={{\n            component: {uid:\"Feed\"},\n            hasBackButton: false\n          }}\n        />\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Navigator;\n","import React, { Component } from \"react\";\nimport ShowUsersPosts from \"./ShowUsersPosts\";\n//import { redirectWhenOAuthChanges } from \"../utils\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\nimport * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass Profile extends Component {\n  // behövde skriva om koden med en konstruktor för att få tillgång till props\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      name: null,\n      photoURL: null,\n      image: \"\",\n      checkmark: \"none\",\n      spinner: \"none\",\n      selectText: \"inherent\",\n      uploadText: \"inherent\",\n      deletingUser: false,\n      listOfPosts: []\n    };\n\n    this.removeUser = firebase.functions().httpsCallable(\"removeUser\");\n  }\n\n  componentDidMount() {\n    this.firebaseAuthListener = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ currentUser: user });\n      }\n    });\n\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.storageRef = storage.ref();\n    this.db = firebase.firestore();\n  }\n\n  componentWillUnmount() {\n    this.firebaseAuthListener && this.firebaseAuthListener();\n  }\n\n  //Loggar ut användaren\n  signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        //console.log(\"Signed out completed\");\n      })\n      .catch(function(error) {\n        console.log(\"Error when signing out\" + error);\n        this.props.createErrorMessage(\n          \"Error when signing out. See log for more details\",\n          \"AlertDialog\"\n        );\n      });\n  };\n\n  showRemoveAccountConfirmation = () => {\n    ons.notification\n      .confirm(\"Are you sure you want to delete your account?\")\n      .then(selected => {\n        //Selected is 1 for OK and 0 for Cancel\n        if (selected) {\n          this.removeAccount();\n        }\n      });\n  };\n\n  removeAccount = () => {\n    this.setState({ deletingUser: true });\n    const { uid } = this.state.currentUser;\n    console.log(uid);\n    this.removeUser({ uid }).then(result => {\n      if (result.data.completed) {\n        this.signOut();\n      } else {\n        this.props.createErrorMessage(\"Error when removing account\", \"Toast\");\n      }\n    });\n  };\n\n  //Set a profile image if the user created account with email+password\n  renderProfileImage() {\n    const currentUser = this.state.currentUser;\n    if (currentUser && currentUser.photoURL === null) {\n      //console.log(currentUser.userName);\n      return (\n        <img\n          src=\"https://t4.ftcdn.net/jpg/02/15/84/43/240_F_215844325_ttX9YiIIyeaR7Ne6EaLLjMAmy4GvPC69.jpg\"\n          alt=\"No Display Name\"\n          className=\"userPhoto\"\n        />\n      );\n    } else {\n      return (\n        <img\n          src={currentUser && currentUser.photoURL}\n          alt={currentUser && currentUser.displayName}\n          className=\"userPhoto\"\n        />\n      );\n    }\n  }\n\n  //Upload a new displayname to firebase\n  editProfileName() {\n    var user = firebase.auth().currentUser;\n    this.state.name !== null &&\n      user\n        .updateProfile({\n          displayName: this.state.name\n        })\n        .then(test => {\n          this.setState({ currentUser: user, name: null });\n        })\n        .catch(function(error) {\n          console.error(\"Error updating! \" + error.code + \" \" + error.message);\n          this.createErrorMessage(\n            \"Error editing profile. See log for more details\",\n            \"AlertDialog\"\n          );\n        });\n  }\n\n  //Upload and edit profile imgae\n  upload = () => {\n    var user = firebase.auth().currentUser;\n    const ref = this.storageRef.child(\"profileImages\");\n    const file = document.querySelector(\"#photo\").files[0];\n    if (file) {\n      this.setState({ uploadText: \"none\", spinner: \"block\" });\n      const name = user.uid;\n      const metadata = {\n        contentType: file.type\n      };\n      const task = ref.child(name).put(file, metadata);\n      task\n        .then(snapshot => snapshot.ref.getDownloadURL())\n        .then(url => {\n          user\n            .updateProfile({\n              photoURL: url\n            })\n            .then(test => {\n              this.setState({\n                currentUser: user,\n                image: null,\n                checkmark: \"none\",\n                spinner: \"none\",\n                selectText: \"block\",\n                uploadText: \"block\"\n              });\n            })\n            .catch(function(error) {\n              // An error happened.\n              this.props.createErrorMessage(\n                \"Error uploading profile image.\",\n                \"AlertDialog\"\n              );\n            });\n        })\n        .catch(console.error);\n    }\n  };\n\n  //A function to chnage state of button-content when the user clicks on upload image\n  selectButtonContent = () => {\n    this.setState({\n      checkmark: \"block\",\n      selectText: \"none\"\n    });\n  };\n\n  render() {\n    const currentUser = this.state.currentUser;\n    if (this.state.deletingUser) {\n      return (\n        <div style={{ paddingTop: \"50%\", fontSize: \"2rem\" }}>Deleting...</div>\n      );\n    }\n\n    return (\n      <Ons.Page className=\"page\">\n        <div className=\"top\">\n          <div className=\"profilDetails\">\n            <div className=\"profileNameAndImageContainer\">\n              {this.renderProfileImage()}\n              <h2>{currentUser && currentUser.displayName}</h2>\n            </div>\n            <div className=\"signOutRemoveContainer\">\n              <Ons.Button modifier=\"material\" onClick={this.signOut}>\n                Sign out <Ons.Icon icon=\"sign-out-alt\" />\n              </Ons.Button>\n              <Ons.Button\n                modifier=\"material\"\n                onClick={this.showRemoveAccountConfirmation}\n              >\n                Remove account <Ons.Icon icon=\"trash\" />\n              </Ons.Button>\n            </div>\n            <div className=\"edit\">\n              <div className=\"editName\">\n                <Ons.Input\n                  value={this.state.name}\n                  onChange={event => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  float\n                  placeholder=\"Update Name\"\n                  className=\"updateName\"\n                  requried\n                />\n                <Ons.Fab\n                  className=\"squareButton\"\n                  onClick={this.editProfileName.bind(this)}\n                >\n                  <Ons.Icon icon=\"save\" />\n                </Ons.Fab>\n              </div>\n              <form>\n                <input\n                  className=\"uploadImage\"\n                  type=\"file\"\n                  name=\"photo\"\n                  accept=\"image/*\"\n                  id=\"photo\"\n                  onChange={this.selectButtonContent}\n                />\n                <label htmlFor=\"photo\" className=\"uploadImage\">\n                  <span style={{ display: this.state.selectText }}>\n                    Select Image\n                  </span>\n                  <Ons.Icon\n                    icon=\"check\"\n                    style={{ display: this.state.checkmark }}\n                  />\n                </label>\n                <Ons.Button\n                  modifier=\"material\"\n                  onClick={this.upload}\n                  className=\"uploadImage rightButton\"\n                >\n                  <span style={{ display: this.state.uploadText }}>Upload</span>\n                  <Ons.Icon\n                    spin\n                    icon=\"sync-alt\"\n                    style={{ display: this.state.spinner }}\n                  />\n                </Ons.Button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <ShowUsersPosts\n          user={this.state.currentUser}\n          shouldShowDeleteButton={true}\n        />\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { ReactMic } from \"react-mic\";\nimport { Line } from \"rc-progress\";\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from 'onsenui'; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n//import ErrorPopUp from \"./ErrorPopUp\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false,\n      audioBlob: null,\n      isRecording: false,\n      isPaused: false,\n      title: \"\",\n      keyword: \"\",\n      time: 0,\n      uploading: false\n    };\n    this.onStop = this.onStop.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(\n      () =>\n        this.setState({\n          time: this.state.time + 1\n        }),\n      1000\n    );\n    setTimeout(this.stopRecording, 10000);\n  }\n\n  stopTimer() {\n    this.setState({ time: 0 });\n    clearInterval(this.timer);\n  }\n\n  componentDidMount = () => {\n    this.storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.db = firebase.firestore();\n  };\n\n  startRecording = () => {\n    this.setState({\n      record: true\n    });\n    this.startTimer();\n  };\n\n  stopRecording = () => {\n    this.setState({\n      record: false\n    });\n    //console.log(this.state.time);\n    this.stopTimer();\n  };\n\n  onData(recordedBlob) {\n    //console.log(\"chunk of real-time data is: \", recordedBlob);\n  }\n\n  onStop(recordedBlob) {\n    this.setState({\n      blobURL: recordedBlob.blobURL,\n      audioBlob: recordedBlob.blob\n    });\n  }\n\n  validUserInput() {\n    if (!this.state.title || this.state.title.length === 0) {\n      this.props.createErrorMessage(\n        \"Please enter a title of your recording.\",\n        \"Toast\"\n      );\n      return false;\n    } else if (\n      !this.state.keyword ||\n      !this.state.keyword.match(/^[a-zA-Z0-9]+$/)\n    ) {\n      this.props.createErrorMessage(\n        \"You can only write one (1) keyword, use letters and/or numbers.\",\n        \"Toast\"\n      );\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  uploadRecording = () => {\n    const { audioBlob, title, keyword } = this.state;\n\n    if (!this.validUserInput()) {\n      return;\n    }\n    if (!audioBlob) {\n      this.props.createErrorMessage(\n        \"A recording is required to be able to post to the Soundy feed.\",\n        \"Toast\"\n      );\n      return;\n    }\n\n    this.setState({ uploading: true });\n    const { uid } = firebase.auth().currentUser;\n\n    //console.log(uid);\n    var timeStamp = +new Date();\n    this.props.updateImagesFromUnsplash(keyword).then(imgUrl => {\n      console.log(title);\n      this.db.collection('all-sounds').add({\n        //Add to database\n        user: uid,\n        time: timeStamp,\n        title: title,\n        keyword: keyword,\n        imgUrl: imgUrl\n      }).then(soundDocumentRef => {\n        var filePath = 'sounds/' + firebase.auth().currentUser.uid + '/' + soundDocumentRef.id;\n        this.storage.ref(filePath).put(audioBlob).then(fileSnapshot => {\n          fileSnapshot.ref.getDownloadURL().then(url => {\n            soundDocumentRef.update({\n              url: url,\n              storageUri: fileSnapshot.metadata.fullPath\n            }).then(this.setState({\n              audioBlob: null,\n              blobURL: \"\",\n              keyword: \"\",\n              title: \"\",\n              uploading: false\n            }, () => this.props.changeTabContainerIndex(0)))\n          })\n        })\n      })\n    })\n    // For some reason, the catch block below isn't reached when an error occures.\n    // Solved it by adding another type of check earlier in the function\n    .catch(error => {\n      console.log('ERROR: ' + error.message);\n      this.props.createErrorMessage(error.message, \"Toast\");\n    });\n  };\n\n  render() {\n    const {\n      blobURL,\n\n      uploading\n    } = this.state;\n    let recordButton;\n\n    switch (this.state.record) {\n      case false:\n        recordButton = (\n          <ons-icon\n            onClick={this.startRecording}\n            icon=\"fa-circle\"\n            size=\"30px\"\n            style={{ color: \"red\" }}\n          />\n        );\n        break;\n      case true:\n        recordButton = (\n          <ons-icon\n            onClick={this.stopRecording}\n            icon=\"fa-stop-circle\"\n            size=\"56px\"\n            style={{ color: \"red\" }}\n          />\n        );\n        break;\n      default:\n        recordButton = <h1>Something is wrong</h1>;\n        break;\n    }\n    return (\n      <Ons.Page>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave boxShadow\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#4C78FB\"\n          backgroundColor=\"#ffffff\"\n        />\n        <div>\n          <ons-fab class=\"fab fab--material\">{recordButton}</ons-fab>\n        </div>\n        <br />\n        <Line\n          percent={this.state.time * 10}\n          style={{ width: \"80%\" }}\n          strokeWidth=\"4\"\n          strokeColor=\"#80B1F7\"\n        />\n        <p>{this.state.time} out of 10s</p>\n        <br />\n        <h2>Listen to your recording:</h2>\n        <div>\n          <audio ref=\"audioSource\" controls=\"controls\" src={blobURL} />\n        </div>\n        <br />\n        <div>\n          <Ons.Input\n            value={this.state.title}\n            onChange={event => {\n              this.setState({ title: event.target.value });\n            }}\n            onKeyPress={(event) => {if(event.which == 13){this.uploadRecording()}}}\n            modifier=\"material\"\n            float\n            placeholder=\"Title\"\n            style={{ width: \"80vw\" }}\n          />\n        </div>\n        <div>\n          <Ons.Input\n            value={this.state.keyword}\n            onChange={event => {\n              this.setState({ keyword: event.target.value });\n            }}\n            onKeyPress={(event) => {if(event.which == 13){this.uploadRecording()}}}\n            modifier=\"material\"\n            float\n            placeholder=\"Enter 1 keyword\"\n            style={{ width: \"80vw\" }}\n          />\n        </div>\n        <br />\n        <div>\n          <Ons.Button\n            modifier=\"material\"\n            onClick={this.uploadRecording}\n            className=\"uploadImage\"\n          >\n            <Ons.Icon\n              spin={uploading}\n              icon={uploading ? \"sync-alt\" : \"fa-cloud-upload-alt\"}\n              style={{ display: this.state.spinner }}\n            />\n\n            <span> Upload</span>\n          </Ons.Button>\n        </div>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default Upload;\n","\n\nconst config = {\n  apiKey: \"AIzaSyAJZXBhqNSQG9VplYDMM-v0cADz10r16-M\",\n  authDomain: \"soundy-dm2518.firebaseapp.com\",\n  databaseURL: \"https://soundy-dm2518.firebaseio.com\",\n  projectId: \"soundy-dm2518\",\n  storageBucket: \"soundy-dm2518.appspot.com\",\n  messagingSenderId: \"431756069486\"\n};\n\nconst unsplashApiKeys = {\n\taccess_key: '2a745e3aed8f6d1704ea605cf1714be80d3fdf38fabf4e6c09a098b770cf97a6',\n\tsecret_key: '33be076d60849f65a6bf319f8b9631b63b4ca166ae5bdbf941cfb381960564e0'\n}\n\nexport default {config, unsplashApiKeys};","import React, { Component } from \"react\";\n\nimport { redirectWhenOAuthChanges } from \"../utils\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/functions\";\n\nimport Navigator from \"./Feed\";\nimport Profile from \"./Profile\";\nimport Upload from \"./Upload\";\n//import UsersPosts from \"./ShowUsersPosts\";\n//import AudioTest from '../AudioRecorder/AudioTest';\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n// import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nimport config from \"../secrets.js\";\n\n// ES Modules syntax\nimport { toJson } from \"unsplash-js\";\n\n// require syntax\n\nclass TabContainer extends Component {\n  // in the this.state.posts array we can save the results from our database queries\n  // these can then automatically be shown in Feed.jsx by passing the state as a prop\n  // By saving the data here we don't have to do a new API call every time we switch tabs\n  constructor(props) {\n    super(props);\n    // connecting to Unsplash to get images automatically\n    const Unsplash = require(\"unsplash-js\").default;\n    //console.log(config);\n    let unsplash = new Unsplash({\n      applicationId: config.unsplashApiKeys.access_key,\n      secret: config.unsplashApiKeys.secret_key\n    });\n\n    this.getAllUsers = firebase.functions().httpsCallable(\"getAllUsers\");\n\n    this.state = {\n      currentUser: null,\n      index: 1,\n      posts: [\n        {\n          title: \"dog\",\n          postedBy: \"Herman\"\n        },\n        {\n          title: \"cat\",\n          postedBy: \"OtherUser\"\n        },\n        {\n          title: \"hat\",\n          postedBy: \"David\"\n        }\n      ],\n      unsplash: unsplash,\n      status: \"loading\",\n\n      // states for the audio recording\n      allSounds: [],\n      lastKnownKey: \"\",\n      hasMore: true\n    };\n  }\n\n  // metod innehållandes kod vi kan använda när vi laddar in databasresultat?\n  // returns the promise of a JSON object containing information about a picture\n  // 50 requests per hour\n  async updateImagesFromUnsplash(keyWord) {\n    if (!keyWord) {\n      // default to something if no keywoard was supplied\n      return \"https://i.imgur.com/dBmYY4M.png\";\n    }\n\n    // Söker efter en bild matchande det sökord som ges\n    // Måste använda try-catch för att kunna fånga upp ifall API-queryn ger error\n    try {\n      let unsplashResult = await this.state.unsplash.search.photos(\n        keyWord,\n        1,\n        1\n      );\n      unsplashResult = await toJson(unsplashResult);\n      return unsplashResult.results[0].urls.thumb;\n    } catch (error) {\n      // Ifall vi får error ge nån default bild (t.ex. ifall vi uppnåt quota för unsplashAPI)\n      console.log(error);\n      return \"https://i.imgur.com/dBmYY4M.png\";\n    }\n  }\n\n  async componentDidMount() {\n    redirectWhenOAuthChanges(this.props.history);\n\n    // kopplar upp till databasen\n    var storage = firebase.app().storage(\"gs://soundy-dm2518.appspot.com/\");\n    this.storageRef = storage.ref();\n    this.db = firebase.firestore();\n    this.fetchAllSounds();\n  }\n\n  // Anropar databasen och sparar alla query-resultat i this.state\n  // Keeps track of the last item in the allSounds array by saving it to state\n  fetchAllSounds = async () => {\n    if (navigator.onLine) {\n      const usersFromDatabase = await this.fetchAllUsers();\n      var allSounds = [];\n      try {\n        await this.db\n          .collection(\"all-sounds\")\n          .orderBy(\"time\", \"desc\")\n          .limit(10)\n          .get()\n          .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n              let soundData = doc.data();\n              const correctUser = usersFromDatabase.find(\n                user => user.uid === soundData.user\n              );\n              soundData.userName = correctUser ? correctUser.displayName : \"-\";\n              soundData.photoURL = correctUser ? correctUser.photoURL : null;\n              soundData.id = doc.id;\n              allSounds.push(soundData);\n            });\n          })\n          .then(() =>\n            this.setState(\n              {\n                allSounds: allSounds,\n                status: \"loaded\"\n              },\n              () =>\n                this.setState({\n                  lastKnownKey: this.state.allSounds[\n                    this.state.allSounds.length - 1\n                  ].time\n                })\n            )\n          )\n          .catch(error => {\n            this.props.createErrorMessage(\n              \"Error when fetching new sounds. See the log for more details\",\n              \"Toast\"\n            );\n            console.log(error);\n          });\n      } catch (err) {\n        this.props.createErrorMessage(err, \"Toast\");\n        console.log(err);\n      }\n    } else {\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\n    }\n  };\n\n  // Slightly different version of the one above.\n  // Fetches new posts from the database, starting from the last time-ID currently loaded.\n  // Excludes the last one currently shown so as not to create duplicates\n  // Keeps track of the last item in the allSounds array by saving it to state\n  fetchAdditionalSounds = async () => {\n    if (navigator.onLine) {\n      const usersFromDatabase = await this.fetchAllUsers();\n      var allSounds = this.state.allSounds;\n      try {\n        await this.db\n          .collection(\"all-sounds\")\n          .orderBy(\"time\", \"desc\")\n          .startAt(this.state.lastKnownKey)\n          .limit(10)\n          .get()\n          .then(querySnapshot => {\n            if (querySnapshot.size === 1) {\n              // ifall vi bara får ett resultat innebär det att det inte finns mer att ladda\n              this.setState({\n                hasMore: false\n              });\n              this.props.createErrorMessage(\n                \"No more posts available.\",\n                \"Toast\"\n              );\n            }\n            querySnapshot.forEach(doc => {\n              let soundData = doc.data();\n              const correctUser = usersFromDatabase.find(\n                user => user.uid === soundData.user\n              );\n              soundData.userName = correctUser ? correctUser.displayName : \"-\";\n              soundData.photoURL = correctUser ? correctUser.photoURL : null;\n              if (soundData.time !== this.state.lastKnownKey) {\n                allSounds.push(soundData);\n              }\n            });\n          })\n          .then(() =>\n            this.setState(\n              {\n                allSounds: allSounds,\n                status: \"loaded\"\n              },\n              () =>\n                this.setState({\n                  lastKnownKey: this.state.allSounds[\n                    this.state.allSounds.length - 1\n                  ].time\n                })\n            )\n          )\n          .catch(error => {\n            this.props.createErrorMessage(\n              \"Error when fetching new sounds. See the log for more details\",\n              \"Toast\"\n            );\n            console.log(error);\n          });\n      } catch (err) {\n        this.props.createErrorMessage(err, \"Toast\");\n        console.log(err);\n      }\n    } else {\n      this.props.createErrorMessage(\"No internet connection! :(\", \"Toast\");\n    }\n  };\n\n  fetchAllUsers = () => {\n    return this.getAllUsers()\n      .then(result => {\n        return result.data.users;\n      })\n      .catch(err => {\n        return [];\n      });\n  };\n\n  // logga-ut knapp\n  signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        //console.log(\"Signed out completed\");\n      })\n      .catch(error => {\n        console.log(\"Error when signing out\" + error);\n        this.props.createErrorMessage(\n          \"Error when signing out \" + error,\n          \"Toast\"\n        );\n      });\n  };\n\n  changeTabContainerIndex(num){\n    this.setState({\n      index:num,\n    });\n  }\n\n  renderToolbar() {\n    return (\n      <Ons.Toolbar>\n        <div className=\"center toolbar__center toolbar__title toolbar--material__center\">\n          <img className=\"logoHeader\" src=\"logo_white.png\" alt=\"logo\" />\n        </div>\n      </Ons.Toolbar>\n    );\n  }\n\n  render() {\n    // Visar bara posts ifall allt laddat klart. Kan med fördel användas till ljud-filerna\n    let feedPage;\n    switch (this.state.status) {\n      case \"loading\":\n        feedPage = (\n          <div style={{ paddingTop: \"50%\" }}>\n            <Ons.Icon spin icon=\"sync-alt\" />\n          </div>\n        );\n        break;\n      case \"loaded\":\n        feedPage = (\n          <Navigator\n            posts={this.state.posts}\n            allSounds={this.state.allSounds}\n            fetchAllSounds={() => this.fetchAllSounds()}\n            createErrorMessage={(msg, type) =>\n              this.props.createErrorMessage(msg, type)\n            }\n            fetchAdditionalSounds={() => this.fetchAdditionalSounds()}\n            hasMore={this.state.hasMore}\n          />\n        );\n        break;\n      default:\n        feedPage = <p>something wrong</p>;\n        break;\n    }\n\n    return (\n      <Ons.Page renderToolbar={this.renderToolbar}>\n        <Ons.Tabbar\n          onPreChange={({ index }) => this.setState({ index: index })}\n          onPostChange={() => console.log(\"postChange\")}\n          onReactive={() => console.log(\"postChange\")}\n          position=\"bottom\"\n          index={this.state.index}\n          renderTabs={(activeIndex, tabbar) => [\n            {\n              content: <Ons.Page key=\"Feed\">{feedPage}</Ons.Page>,\n              tab: <Ons.Tab label=\"Feed\" icon=\"fa-headphones\" key=\"FeedTab\" />\n            },\n            {\n              content: (\n                <Ons.Page key=\"Upload\">\n                  <Upload\n                    createErrorMessage={(message, type) =>\n                      this.props.createErrorMessage(message, type)\n                    }\n                    updateImagesFromUnsplash={keyWord =>\n                      this.updateImagesFromUnsplash(keyWord)\n                    }\n                    changeTabContainerIndex = {(num) =>\n                      this.changeTabContainerIndex(num)\n                    }\n                  />\n                </Ons.Page>\n              ),\n              tab: (\n                <Ons.Tab label=\"Upload\" icon=\"fa-microphone\" key=\"UploadTab\" />\n              )\n            },\n            {\n              content: (\n                <Ons.Page key=\"Profile\">\n                  <Profile\n                    createErrorMessage={(message, type) =>\n                      this.props.createErrorMessage(message, type)\n                    }\n                  />\n                </Ons.Page>\n              ),\n              tab: <Ons.Tab label=\"Profile\" icon=\"fa-user\" key=\"ProfileTab\" />\n            }\n          ]}\n        />\n      </Ons.Page>\n    );\n  }\n}\n\nexport default TabContainer;\n","import React, { Component } from \"react\";\n\n// imports for OnsenUI\nimport * as Ons from \"react-onsenui\"; // Import everything and use it as 'Ons.Page', 'Ons.Button'\n//import * as ons from \"onsenui\"; // This needs to be imported to bootstrap the components.\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass ErrorPopUp extends Component {\n  // inherits the posts to show from the TabContainer.jsx\n\n  handleCancel() {\n    //console.log(\"clicked handleCancel\");\n  }\n\n  renderToast() {\n    return (\n      <Ons.Toast isOpen={this.props.isOpen}>\n        <div className=\"message\">{this.props.message}</div>\n        <button onClick={() => this.props.onCancel()}>Dismiss</button>\n      </Ons.Toast>\n    );\n  }\n\n  renderAlertDialog() {\n    return (\n      <Ons.AlertDialog\n        isOpen={this.props.isOpen}\n        onCancel={() => this.props.onCancel()}\n        cancelable\n      >\n        <div className=\"alert-dialog-title\">Warning!</div>\n        <div className=\"alert-dialog-content\">{this.props.message}</div>\n        <div className=\"alert-dialog-footer\">\n          <button\n            onClick={() => this.props.onCancel()}\n            className=\"alert-dialog-button\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={() => this.props.onCancel()}\n            className=\"alert-dialog-button\"\n          >\n            Ok\n          </button>\n        </div>\n      </Ons.AlertDialog>\n    );\n  }\n\n  showError() {\n    let toRet;\n    switch (this.props.type) {\n      case \"AlertDialog\":\n        toRet = this.renderAlertDialog();\n        break;\n      case \"Toast\":\n        toRet = this.renderToast();\n        break;\n      default:\n        toRet = this.renderAlertDialog();\n        break;\n    }\n    return toRet;\n  }\n\n  render() {\n    let toReturn = this.showError();\n    return <span>{toReturn}</span>;\n  }\n}\n\nexport default ErrorPopUp;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport * as Ons from \"react-onsenui\";\n\n// Webpack CSS import\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      email: \"\",\n    };\n  }\n\n  componentDidMount() {\n  }\n\n\n  resetPassword = () => {\n    var auth = firebase.auth();\n    var emailAddress = this.state.email;\n\n    auth.sendPasswordResetEmail(emailAddress).then(() => {\n      // Email sent.\n      console.log(this)\n      this.props.createErrorMessage(\"Email for password reset sent. Follow instructions in the email.\", \"Toast\");\n      this.props.history.push('/');\n    }).catch((error) => {\n      // An error happened.\n      console.log(error);\n      this.props.createErrorMessage(\"Error entering email: \" + error.code, \"Toast\");\n    });\n\n  };\n\n  renderToolbar() {\n    return (\n      <Ons.Toolbar>\n        <div className=\"center\">Welcome</div>\n      </Ons.Toolbar>\n    );\n  }\n\n  render() {\n    return (\n      <Ons.Page renderToolbar={this.renderToolbar} className=\"page\">\n        <h1>Soundy</h1>\n          <form onSubmit = {(event) => {\n            event.preventDefault();\n            this.resetPassword();\n          }}>\n            <p>\n                <Ons.Input\n                  value={this.state.email}\n                  onChange={event => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  modifier=\"underbar\"\n                  type=\"email\"\n                  float\n                  placeholder=\"Enter email to reset password\"\n                  style={{ width: \"80vw\" }}\n                />\n              </p>\n\n              <br />\n\n              <p>\n                <Ons.Button\n                  onClick={this.resetPassword}\n                  modifier=\"underbar\"\n                  style={{ width: \"60vw\" }}\n                >\n                  Send me an email\n                </Ons.Button>\n              </p>\n\n            <input type = \"submit\" style = {{visibility:\"hidden\", height:0, width:0}}/>\n          </form>\n          <p style = {{width:\"80%\"}} >Enter your email address to receive an email with details on how to reset your password.</p> \n          <a href='javascript:;' onClick={() => {this.props.history.push('/login')}}>Back to the login screen</a>\n      </Ons.Page>\n    );\n  }\n}\n\nexport default ResetPassword;","import React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport CreateUser from \"./CreateUser\";\nimport Loading from \"./Loading\";\nimport TabContainer from \"./Containers/TabContainer\";\nimport ErrorPopUp from \"./Containers/ErrorPopUp\";\nimport ResetPassword from \"./ResetPassword\";\n//import ShowUsersPosts from \"./Containers/ShowUsersPosts\";\n\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorOccured: false,\n      errorMessage: \"\",\n      errorMessageType: \"\"\n    };\n    window.addEventListener(\"offline\", e => {\n      this.createErrorMessage(\n        \"No internet connection detected. \\nThe app won't function properly.\",\n        \"Toast\"\n      );\n    });\n  }\n\n  createErrorMessage(message, type) {\n    this.setState({\n      errorOccured: true,\n      errorMessage: message,\n      errorMessageType: type\n    });\n  }\n\n  cancelErrorMessage() {\n    this.setState({\n      errorOccured: false,\n      errorMessage: \"\",\n      errorMessageType: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <Route path=\"/\" exact component={Loading} />\n          <Route\n            path=\"/login\"\n            exact\n            render={props => (\n              <Login\n                {...props}\n                createErrorMessage={(message, type) =>\n                  this.createErrorMessage(message, type)\n                }\n                cancelErrorMessage={() => this.cancelErrorMessage()}\n              />\n            )}\n          />\n          <Route\n            path=\"/create\"\n            exact\n            render={props => (\n              <CreateUser\n                {...props}\n                createErrorMessage={(message, type) =>\n                  this.createErrorMessage(message, type)\n                }\n                cancelErrorMessage={() => this.cancelErrorMessage()}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/TabContainer\"\n            render={props => (\n              <TabContainer\n                {...props}\n                createErrorMessage={(message, type) =>\n                  this.createErrorMessage(message, type)\n                }\n                cancelErrorMessage={() => this.cancelErrorMessage()}\n              />\n            )}\n          />\n\n          <Route \n            path = \"/resetpassword\"\n            exact\n            render = {props => (\n              <ResetPassword\n                {...props}\n                createErrorMessage = {(message, type) => \n                  this.createErrorMessage(message, type)\n                }\n                cancelErrorMessage = {() => this.cancelErrorMessage()}\n              />\n            )}\n          />\n\n          <ErrorPopUp\n            type={this.state.errorMessageType}\n            isOpen={this.state.errorOccured}\n            message={this.state.errorMessage}\n            onCancel={() => this.cancelErrorMessage()}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <Route path=\"/TabContainer\"\n//         \trender ={ () =>\n//         \t\t<TabContainer createErrorMessage = {() => this.createErrorMessage()} cancelErrorMessage = {() => this.cancelErrorMessage()} />\n//         \t}\n//     \t/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport config from \"./secrets\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp(config.config);\n\nReactDOM.render(\n\t<HashRouter>\n    \t<App />\n  \t</HashRouter>\n\t, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}